{"version":3,"file":"index.js","mappings":"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,WACA,WACA,WACA,WACA,WACA,WACA,WACA,aAGM,KAAPlC,GAAsB,OAATF,EAChBG,GAAO,GAAKA,GAAO,GACnBiC,EAAe,CACX,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,YAEGjC,GAAO,IAAMA,GAAO,GAC3BiC,EAAe,CACX,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,YAEGjC,GAAO,IAAMA,GAAO,GAC3BiC,EAAe,CACX,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,YAEGjC,GAAO,IAAMA,GAAO,KAC3BiC,EAAe,CACX,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,aAGM,IAAPlC,GAAqB,OAATF,EACfG,GAAO,GAAKA,GAAO,GACnBiC,EAAe,CACX,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,YAEGjC,GAAO,IAAMA,GAAO,GAC3BiC,EAAe,CACX,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,YAEGjC,GAAO,IAAMA,GAAO,GAC3BiC,EAAe,CACX,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,YAEGjC,GAAO,IAAMA,GAAO,KAC3BiC,EAAe,CACX,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,aAGM,IAAPlC,GAAqB,OAATF,EACfG,GAAO,GAAKA,GAAO,GACnBiC,EAAe,CACX,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,YAEGjC,GAAO,IAAMA,GAAO,GAC3BiC,EAAe,CACX,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,YAEGjC,GAAO,IAAMA,GAAO,GAC3BiC,EAAe,CACX,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,YAEGjC,GAAO,IAAMA,GAAO,KAC3BiC,EAAe,CACX,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,aAGM,IAAPlC,GAAqB,OAATF,EACfG,GAAO,GAAKA,GAAO,GACnBiC,EAAe,CACX,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,YAEGjC,GAAO,IAAMA,GAAO,GAC3BiC,EAAe,CACX,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,YAEGjC,GAAO,IAAMA,GAAO,GAC3BiC,EAAe,CACX,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,YAEGjC,GAAO,IAAMA,GAAO,KAC3BiC,EAAe,CACX,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,aAGM,IAAPlC,GAAqB,OAATF,EACfG,GAAO,GAAKA,GAAO,GACnBiC,EAAe,CACX,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,YAEGjC,GAAO,IAAMA,GAAO,GAC3BiC,EAAe,CACX,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,YAEGjC,GAAO,IAAMA,GAAO,GAC3BiC,EAAe,CACX,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,YAEGjC,GAAO,IAAMA,GAAO,KAC3BiC,EAAe,CACX,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,aAGM,IAAPlC,GAAqB,OAATF,EACfG,GAAO,GAAKA,GAAO,GACnBiC,EAAe,CACX,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,YAEGjC,GAAO,IAAMA,GAAO,GAC3BiC,EAAe,CACX,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,YAEGjC,GAAO,IAAMA,GAAO,GAC3BiC,EAAe,CACX,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,YAEGjC,GAAO,IAAMA,GAAO,KAC3BiC,EAAe,CACX,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,aAGM,IAAPlC,GAAqB,OAATF,EACfG,GAAO,GAAKA,GAAO,GACnBiC,EAAe,CACX,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,YAEGjC,GAAO,IAAMA,GAAO,GAC3BiC,EAAe,CACX,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,YAEGjC,GAAO,IAAMA,GAAO,GAC3BiC,EAAe,CACX,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,YAEGjC,GAAO,IAAMA,GAAO,KAC3BiC,EAAe,CACX,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,aAGM,IAAPlC,GAAqB,OAATF,EACfG,GAAO,GAAKA,GAAO,GACnBiC,EAAe,CACX,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,YAEGjC,GAAO,IAAMA,GAAO,GAC3BiC,EAAe,CACX,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,YAEGjC,GAAO,IAAMA,GAAO,GAC3BiC,EAAe,CACX,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,YAEGjC,GAAO,IAAMA,GAAO,KAC3BiC,EAAe,CACX,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,aAGM,IAAPlC,GAAqB,OAATF,EACfG,GAAO,GAAKA,GAAO,GACnBiC,EAAe,CACX,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,YAEGjC,GAAO,IAAMA,GAAO,GAC3BiC,EAAe,CACX,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,YAEGjC,GAAO,IAAMA,GAAO,GAC3BiC,EAAe,CACX,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,YAEGjC,GAAO,IAAMA,GAAO,KAC3BiC,EAAe,CACX,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,aAGM,IAAPlC,GAAqB,OAATF,EACfG,GAAO,GAAKA,GAAO,GACnBiC,EAAe,CACX,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,YAEGjC,GAAO,IAAMA,GAAO,GAC3BiC,EAAe,CACX,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,YAEGjC,GAAO,IAAMA,GAAO,GAC3BiC,EAAe,CACX,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,YAEGjC,GAAO,IAAMA,GAAO,KAC3BiC,EAAe,CACX,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,aAGDlC,GAAM,IAAMA,GAAM,IAAe,OAATF,IAC/BoC,EAAe,CACX,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,aAGDA,CAAY,EA8FQC,CAAmBP,OAAOJ,EAAUxB,IAAK4B,OAAOJ,EAAUvB,KAAMuB,EAAU1B,MAC7FhD,QAAe2B,EAAyB1B,EAAMmF,EAClD,CAIA,OAHApF,EAAOsF,MAAK,CAACtD,EAAGE,IAAMF,EAAEuD,IAAMrD,EAAEqD,MAGzBtG,EAAIC,OAAO,KAAKC,KAAK,CAAED,QAAQ,EAAME,QAAS,eAAgBoG,IAAKxF,EAAOoE,OAAQhE,KAAMJ,GA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","sources":["webpack://jackpotbackend/./src/Routes/adminRoutes.js","webpack://jackpotbackend/./src/Routes/resultRoute.js","webpack://jackpotbackend/./src/controllers/adminController.js","webpack://jackpotbackend/./src/controllers/resultController.js","webpack://jackpotbackend/./src/middleware/Auth.js","webpack://jackpotbackend/./src/model/adminModel.js","webpack://jackpotbackend/./src/model/resultModel.js","webpack://jackpotbackend/external commonjs \"bcrypt\"","webpack://jackpotbackend/external commonjs \"body-parser\"","webpack://jackpotbackend/external commonjs \"cors\"","webpack://jackpotbackend/external commonjs \"dotenv\"","webpack://jackpotbackend/external commonjs \"express\"","webpack://jackpotbackend/external commonjs \"jsonwebtoken\"","webpack://jackpotbackend/external commonjs \"mongoose\"","webpack://jackpotbackend/webpack/bootstrap","webpack://jackpotbackend/./index.js"],"sourcesContent":["const express = require('express');\r\nconst { Authentication } = require('../Routes/resultRoute');\r\nconst { adminLogin, createAdmin } = require('../controllers/adminController');\r\nconst router = express.Router();\r\n\r\nrouter.post(\"/login\", adminLogin);\r\nrouter.post(\"/createAdmin/:secretKey\", createAdmin);\r\n\r\n\r\n\r\nmodule.exports = router;","const express = require('express');\r\nconst { Authentication } = require('../middleware/Auth');\r\nconst { generateMultipleResult, getResultForClient, getResultForAdmin, getResultForSpecificDate, updateResultForAdmin } = require('../controllers/resultController');\r\nconst router = express.Router();\r\n\r\n\r\nrouter.post(\"/setresultbyid/:resultid\", Authentication, updateResultForAdmin);\r\n\r\nrouter.get(\"/generateMultipleRecord\",Authentication, generateMultipleResult);\r\nrouter.get(\"/getclientresult\", getResultForClient);\r\nrouter.get(\"/getadminresult\", Authentication, getResultForAdmin);\r\nrouter.get(\"/getresultfordate/:date\", getResultForSpecificDate);\r\n\r\nrouter.get(\"/\", (req,res) => {\r\n  res.status(200).send({message:\"Server is running fine\"});\r\n})\r\n\r\n// router.get(\"/getallresult\", addAfield);\r\n\r\nmodule.exports = router;\r\n","\r\nconst { createAdminFn, getAdminByUserIdFn } = require(\"../model/adminModel\");\r\nconst jwt = require(\"jsonwebtoken\");\r\nconst bcrypt = require(\"bcrypt\");\r\n\r\nconst createAdmin = async (req, res) => {\r\n    try {\r\n        let { name, userid, password } = req.body;\r\n        let secretKey = req.params.secretKey;\r\n        if (process.env.CREATEADMIN_SECRET_KEY === secretKey) {\r\n            if (!name || !userid || !password) {\r\n                return res.status(400).send({ status: false, message: 'Bad Request' });\r\n            }\r\n            if (name === \"\" || userid === \"\" || password === \"\") {\r\n                return res.status(400).send({ status: false, message: 'All Fields are required' });\r\n            }\r\n            let hashedPassword = await bcrypt.hash(password, 10);\r\n            password = hashedPassword;\r\n            let data = { name, userid, password };\r\n            let admin = await createAdminFn(data);\r\n            admin.password = undefined;\r\n            return res.status(201).send({ status: true, message: \"Admin created Successfully\", data: admin })\r\n        } else {\r\n            return res.status(403).send({ status: false, message: \"You are not authorized to perform this action\" });\r\n        }\r\n    } catch (error) {\r\n        return res.status(500).send({ status: false, message: error.message });\r\n    }\r\n}\r\nconst adminLogin = async (req, res) => {\r\n    try {\r\n        let { userid, password } = req.body;\r\n        if (!userid || !password) {\r\n            return res.status(400).send({ status: false, message: 'Bad Request' });\r\n        }\r\n        if (userid === \"\" || password === \"\") {\r\n            return res.status(400).send({ status: false, message: 'All Fields are required' });\r\n        }\r\n        let admin = await getAdminByUserIdFn(userid);\r\n        if (!admin) {\r\n            return res.status(400).send({ status: false, message: 'Plese provide valid userId and password' });\r\n        }\r\n        bcrypt.compare(password, admin.password, function (err, result) {\r\n            if (err) {\r\n                return res\r\n                    .status(400)\r\n                    .send({ status: false, message: err.message });\r\n            }\r\n            hasAccess(result);\r\n        });\r\n\r\n        function hasAccess(result) {\r\n            if (result) {\r\n                let date = Date.now();\r\n                let data = {};\r\n                let issueTime = Math.floor(date / 1000);\r\n                let token = jwt.sign(\r\n                    {\r\n                        userId: admin.userid,\r\n                        iat: issueTime,\r\n                    },\r\n                    process.env.TOKEN_SECRET_KEY,\r\n                    { expiresIn: \"12h\" }\r\n                );\r\n                data.token = token;\r\n                data.name = admin.name;\r\n                res.setHeader(\"Authorization\", \"Bearer\", token);\r\n                return res.status(200).send({\r\n                    status: true,\r\n                    message: \"Successfully loggedin\",\r\n                    data: data,\r\n                });\r\n            }\r\n            else {\r\n                return res\r\n                    .status(401)\r\n                    .send({ status: false, message: \"Login denied\" });\r\n            }\r\n        }\r\n    } catch (error) {\r\n        return res.status(500).send({ status: false, message: error.message });\r\n    }\r\n}\r\n\r\nmodule.exports = { adminLogin, createAdmin };","const { generateResult, getResultBYSpecificBeforeToDay, getResultBYSpecificToDay, getResultBYDateModel, getResultByIdFn, getAllResult } = require(\"../model/resultModel\");\r\n\r\nconst randomGenerate = () => {\r\n    let a = Math.floor(Math.random() * 90 + 10);\r\n    let b = Math.floor(Math.random() * 90 + 10);\r\n    let c = Math.floor(Math.random() * 90 + 10);\r\n    let d = Math.floor(Math.random() * 90 + 10);\r\n    let e = Math.floor(Math.random() * 90 + 10);\r\n    return { a, b, c, d, e };\r\n};\r\n\r\nconst getUnique5Number = () => {\r\n    let { a, b, c, d, e } = randomGenerate();\r\n    let set = new Set([a, b, c, d, e]).size;\r\n    while (set < 5) {\r\n        let randomG = randomGenerate();\r\n        a = randomG.a;\r\n        b = randomG.b;\r\n        c = randomG.c;\r\n        d = randomG.d;\r\n        e = randomG.e;\r\n        set = new Set([a, b, c, d, e]).size;\r\n    }\r\n    return { a, b, c, d, e };\r\n};\r\n\r\nconst generateMultipleResult = async (req, res) => {\r\n    try {\r\n        let arr2 = [\r\n            \"08:00 AM\",\r\n            \"08:15 AM\",\r\n            \"08:30 AM\",\r\n            \"08:45 AM\",\r\n            \"09:00 AM\",\r\n            \"09:15 AM\",\r\n            \"09:30 AM\",\r\n            \"09:45 AM\",\r\n            \"10:00 AM\",\r\n            \"10:15 AM\",\r\n            \"10:30 AM\",\r\n            \"10:45 AM\",\r\n            \"11:00 AM\",\r\n            \"11:15 AM\",\r\n            \"11:30 AM\",\r\n            \"11:45 AM\",\r\n            \"12:00 PM\",\r\n            \"12:15 PM\",\r\n            \"12:30 PM\",\r\n            \"12:45 PM\",\r\n            \"01:00 PM\",\r\n            \"01:15 PM\",\r\n            \"01:30 PM\",\r\n            \"01:45 PM\",\r\n            \"02:00 PM\",\r\n            \"02:15 PM\",\r\n            \"02:30 PM\",\r\n            \"02:45 PM\",\r\n            \"03:00 PM\",\r\n            \"03:15 PM\",\r\n            \"03:30 PM\",\r\n            \"03:45 PM\",\r\n            \"04:00 PM\",\r\n            \"04:15 PM\",\r\n            \"04:30 PM\",\r\n            \"04:45 PM\",\r\n            \"05:00 PM\",\r\n            \"05:15 PM\",\r\n            \"05:30 PM\",\r\n            \"05:45 PM\",\r\n            \"06:00 PM\",\r\n            \"06:15 PM\",\r\n            \"06:30 PM\",\r\n            \"06:45 PM\",\r\n            \"07:00 PM\",\r\n            \"07:15 PM\",\r\n            \"07:30 PM\",\r\n            \"07:45 PM\",\r\n            \"08:00 PM\",\r\n            \"08:15 PM\",\r\n            \"08:30 PM\",\r\n            \"08:45 PM\",\r\n            \"09:00 PM\",\r\n            \"09:15 PM\",\r\n            \"09:30 PM\",\r\n            \"09:45 PM\",\r\n            \"10:00 PM\",\r\n        ];\r\n\r\n        let dateNow = new Date().getTime();\r\n        let hr24 = 3600000 * 24;\r\n        for (let i = 0; i < 365; i++) {\r\n            let add24Hr = new Date(dateNow + hr24);\r\n            let date = new Date(add24Hr);\r\n            dateNow = add24Hr.getTime();\r\n            let date1 = formatDate(date);\r\n            let date2 = new Date(date1);\r\n            for (let j = 0; j < arr2.length; j++) {\r\n                let { a, b, c, d, e } = getUnique5Number();\r\n                let data = {\r\n                    a: a,\r\n                    b: b,\r\n                    c: c,\r\n                    d: d,\r\n                    e: e,\r\n                    resultFor: arr2[j],\r\n                    nextDraw: arr2[j + 1],\r\n                    created_At: date2,\r\n                };\r\n                if (j === arr2.length - 1) {\r\n                    data.nextDraw = \"\";\r\n                }\r\n                await generateResult(data);\r\n            }\r\n            console.log(`${date.getDate()}-${date.getMonth() + 1}-${date.getFullYear()}`);\r\n        }\r\n\r\n        return res.status(200).send({ status: true, message: \"Ok message\" });\r\n    } catch (error) {\r\n        return res.status(500).send({ status: false, message: error.message });\r\n    }\r\n};\r\nfunction formatAMPM(date) {\r\n    var hours = date.getHours();\r\n    var minutes = date.getMinutes();\r\n    var ampm = hours >= 12 ? \"PM\" : \"AM\";\r\n    hours = hours % 12;\r\n    hours = hours ? hours : 12; // the hour '0' should be '12'\r\n    hours = hours < 10 ? \"0\" + hours : hours;\r\n    minutes = minutes < 10 ? \"0\" + minutes : minutes;\r\n    var strTime = hours + \":\" + minutes + \" \" + ampm;\r\n    return { strTime: strTime, hr: hours, min: minutes, ampm: ampm };\r\n}\r\nfunction formatDate(date) {\r\n    var year = date.getFullYear();\r\n    var month = date.getMonth() + 1;\r\n    var nowDate = date.getDate();\r\n    month = month < 10 ? \"0\" + month : month;\r\n    nowDate = nowDate < 10 ? \"0\" + nowDate : nowDate;\r\n    return `${year}-${month}-${nowDate}`;\r\n}\r\n\r\nconst getResultFor = (hr, min, ampm) => {\r\n    let resultFor = \"\";\r\n    if (hr === 8 && ampm === \"AM\") {\r\n        if (min >= 0 && min <= 14) {\r\n            resultFor = \"08:00 AM\";\r\n        } else if (min >= 15 && min <= 29) {\r\n            resultFor = \"08:15 AM\";\r\n        } else if (min >= 30 && min <= 44) {\r\n            resultFor = \"08:30 AM\";\r\n        } else if (min >= 45 && min <= 59) {\r\n            resultFor = \"08:45 AM\";\r\n        }\r\n    } else if (hr === 9 && ampm === \"AM\") {\r\n        if (min >= 0 && min <= 14) {\r\n            resultFor = \"09:00 AM\";\r\n        } else if (min >= 15 && min <= 29) {\r\n            resultFor = \"09:15 AM\";\r\n        } else if (min >= 30 && min <= 44) {\r\n            resultFor = \"09:30 AM\";\r\n        } else if (min >= 45 && min <= 59) {\r\n            resultFor = \"09:45 AM\";\r\n        }\r\n    } else if (hr === 10 && ampm === \"AM\") {\r\n        if (min >= 0 && min <= 14) {\r\n            resultFor = \"10:00 AM\";\r\n        } else if (min >= 15 && min <= 29) {\r\n            resultFor = \"10:15 AM\";\r\n        } else if (min >= 30 && min <= 44) {\r\n            resultFor = \"10:30 AM\";\r\n        } else if (min >= 45 && min <= 59) {\r\n            resultFor = \"10:45 AM\";\r\n        }\r\n    } else if (hr === 11 && ampm === \"AM\") {\r\n        if (min >= 0 && min <= 14) {\r\n            resultFor = \"11:00 AM\";\r\n        } else if (min >= 15 && min <= 29) {\r\n            resultFor = \"11:15 AM\";\r\n        } else if (min >= 30 && min <= 44) {\r\n            resultFor = \"11:30 AM\";\r\n        } else if (min >= 45 && min <= 59) {\r\n            resultFor = \"11:45 AM\";\r\n        }\r\n    } else if (hr === 12 && ampm === \"PM\") {\r\n        if (min >= 0 && min <= 14) {\r\n            resultFor = \"12:00 PM\";\r\n        } else if (min >= 15 && min <= 29) {\r\n            resultFor = \"12:15 PM\";\r\n        } else if (min >= 30 && min <= 44) {\r\n            resultFor = \"12:30 PM\";\r\n        } else if (min >= 45 && min <= 59) {\r\n            resultFor = \"12:45 PM\";\r\n        }\r\n    } else if (hr === 1 && ampm === \"PM\") {\r\n        if (min >= 0 && min <= 14) {\r\n            resultFor = \"01:00 PM\";\r\n        } else if (min >= 15 && min <= 29) {\r\n            resultFor = \"01:15 PM\";\r\n        } else if (min >= 30 && min <= 44) {\r\n            resultFor = \"01:30 PM\";\r\n        } else if (min >= 45 && min <= 59) {\r\n            resultFor = \"01:45 PM\";\r\n        }\r\n    } else if (hr === 2 && ampm === \"PM\") {\r\n        if (min >= 0 && min <= 14) {\r\n            resultFor = \"02:00 PM\";\r\n        } else if (min >= 15 && min <= 29) {\r\n            resultFor = \"02:15 PM\";\r\n        } else if (min >= 30 && min <= 44) {\r\n            resultFor = \"02:30 PM\";\r\n        } else if (min >= 45 && min <= 59) {\r\n            resultFor = \"02:45 PM\";\r\n        }\r\n    } else if (hr === 3 && ampm === \"PM\") {\r\n        if (min >= 0 && min <= 14) {\r\n            resultFor = \"03:00 PM\";\r\n        } else if (min >= 15 && min <= 29) {\r\n            resultFor = \"03:15 PM\";\r\n        } else if (min >= 30 && min <= 44) {\r\n            resultFor = \"03:30 PM\";\r\n        } else if (min >= 45 && min <= 59) {\r\n            resultFor = \"03:45 PM\";\r\n        }\r\n    } else if (hr === 4 && ampm === \"PM\") {\r\n        if (min >= 0 && min <= 14) {\r\n            resultFor = \"04:00 PM\";\r\n        } else if (min >= 15 && min <= 29) {\r\n            resultFor = \"04:15 PM\";\r\n        } else if (min >= 30 && min <= 44) {\r\n            resultFor = \"04:30 PM\";\r\n        } else if (min >= 45 && min <= 59) {\r\n            resultFor = \"04:45 PM\";\r\n        }\r\n    } else if (hr === 5 && ampm === \"PM\") {\r\n        if (min >= 0 && min <= 14) {\r\n            resultFor = \"05:00 PM\";\r\n        } else if (min >= 15 && min <= 29) {\r\n            resultFor = \"05:15 PM\";\r\n        } else if (min >= 30 && min <= 44) {\r\n            resultFor = \"05:30 PM\";\r\n        } else if (min >= 45 && min <= 59) {\r\n            resultFor = \"05:45 PM\";\r\n        }\r\n    } else if (hr === 6 && ampm === \"PM\") {\r\n        if (min >= 0 && min <= 14) {\r\n            resultFor = \"06:00 PM\";\r\n        } else if (min >= 15 && min <= 29) {\r\n            resultFor = \"06:15 PM\";\r\n        } else if (min >= 30 && min <= 44) {\r\n            resultFor = \"06:30 PM\";\r\n        } else if (min >= 45 && min <= 59) {\r\n            resultFor = \"06:45 PM\";\r\n        }\r\n    } else if (hr === 7 && ampm === \"PM\") {\r\n        if (min >= 0 && min <= 14) {\r\n            resultFor = \"07:00 PM\";\r\n        } else if (min >= 15 && min <= 29) {\r\n            resultFor = \"07:15 PM\";\r\n        } else if (min >= 30 && min <= 44) {\r\n            resultFor = \"07:30 PM\";\r\n        } else if (min >= 45 && min <= 59) {\r\n            resultFor = \"07:45 PM\";\r\n        }\r\n    } else if (hr === 8 && ampm === \"PM\") {\r\n        if (min >= 0 && min <= 14) {\r\n            resultFor = \"08:00 PM\";\r\n        } else if (min >= 15 && min <= 29) {\r\n            resultFor = \"08:15 PM\";\r\n        } else if (min >= 30 && min <= 44) {\r\n            resultFor = \"08:30 PM\";\r\n        } else if (min >= 45 && min <= 59) {\r\n            resultFor = \"08:45 PM\";\r\n        }\r\n    } else if (hr === 9 && ampm === \"PM\") {\r\n        if (min >= 0 && min <= 14) {\r\n            resultFor = \"09:00 PM\";\r\n        } else if (min >= 15 && min <= 29) {\r\n            resultFor = \"09:15 PM\";\r\n        } else if (min >= 30 && min <= 44) {\r\n            resultFor = \"09:30 PM\";\r\n        } else if (min >= 45 && min <= 59) {\r\n            resultFor = \"09:45 PM\";\r\n        }\r\n    } else if (hr >= 10 && hr <= 11 && ampm === \"PM\") {\r\n        resultFor = \"10:00 PM\";\r\n    }\r\n    return resultFor;\r\n};\r\nconst getAdminResultFor = (hr, min, ampm) => {\r\n    let resultFor = \"\";\r\n    if (hr === 7 && ampm === \"AM\") {\r\n        if (min >= 45 && min <= 59) {\r\n            resultFor = \"08:00 AM\";\r\n        }\r\n    } else if (hr === 8 && ampm === \"AM\") {\r\n        if (min >= 0 && min <= 14) {\r\n            resultFor = \"08:15 AM\";\r\n        } else if (min >= 15 && min <= 29) {\r\n            resultFor = \"08:30 AM\";\r\n        } else if (min >= 30 && min <= 44) {\r\n            resultFor = \"08:45 AM\";\r\n        } else if (min >= 45 && min <= 59) {\r\n            resultFor = \"09:00 AM\";\r\n        }\r\n    } else if (hr === 9 && ampm === \"AM\") {\r\n        if (min >= 0 && min <= 14) {\r\n            resultFor = \"09:15 AM\";\r\n        } else if (min >= 15 && min <= 29) {\r\n            resultFor = \"09:30 AM\";\r\n        } else if (min >= 30 && min <= 44) {\r\n            resultFor = \"09:45 AM\";\r\n        } else if (min >= 45 && min <= 59) {\r\n            resultFor = \"10:00 AM\";\r\n        }\r\n    } else if (hr === 10 && ampm === \"AM\") {\r\n        if (min >= 0 && min <= 14) {\r\n            resultFor = \"10:15 AM\";\r\n        } else if (min >= 15 && min <= 29) {\r\n            resultFor = \"10:30 AM\";\r\n        } else if (min >= 30 && min <= 44) {\r\n            resultFor = \"10:45 AM\";\r\n        } else if (min >= 45 && min <= 59) {\r\n            resultFor = \"11:00 AM\";\r\n        }\r\n    } else if (hr === 11 && ampm === \"AM\") {\r\n        if (min >= 0 && min <= 14) {\r\n            resultFor = \"11:15 AM\";\r\n        } else if (min >= 15 && min <= 29) {\r\n            resultFor = \"11:30 AM\";\r\n        } else if (min >= 30 && min <= 44) {\r\n            resultFor = \"11:45 AM\";\r\n        } else if (min >= 45 && min <= 59) {\r\n            resultFor = \"12:00 PM\";\r\n        }\r\n    } else if (hr === 12 && ampm === \"PM\") {\r\n        if (min >= 0 && min <= 14) {\r\n            resultFor = \"12:15 PM\";\r\n        } else if (min >= 15 && min <= 29) {\r\n            resultFor = \"12:30 PM\";\r\n        } else if (min >= 30 && min <= 44) {\r\n            resultFor = \"12:45 PM\";\r\n        } else if (min >= 45 && min <= 59) {\r\n            resultFor = \"01:00 PM\";\r\n        }\r\n    } else if (hr === 1 && ampm === \"PM\") {\r\n        if (min >= 0 && min <= 14) {\r\n            resultFor = \"01:15 PM\";\r\n        } else if (min >= 15 && min <= 29) {\r\n            resultFor = \"01:30 PM\";\r\n        } else if (min >= 30 && min <= 44) {\r\n            resultFor = \"01:45 PM\";\r\n        } else if (min >= 45 && min <= 59) {\r\n            resultFor = \"02:00 PM\";\r\n        }\r\n    } else if (hr === 2 && ampm === \"PM\") {\r\n        if (min >= 0 && min <= 14) {\r\n            resultFor = \"02:15 PM\";\r\n        } else if (min >= 15 && min <= 29) {\r\n            resultFor = \"02:30 PM\";\r\n        } else if (min >= 30 && min <= 44) {\r\n            resultFor = \"02:45 PM\";\r\n        } else if (min >= 45 && min <= 59) {\r\n            resultFor = \"03:00 PM\";\r\n        }\r\n    } else if (hr === 3 && ampm === \"PM\") {\r\n        if (min >= 0 && min <= 14) {\r\n            resultFor = \"03:15 PM\";\r\n        } else if (min >= 15 && min <= 29) {\r\n            resultFor = \"03:30 PM\";\r\n        } else if (min >= 30 && min <= 44) {\r\n            resultFor = \"03:45 PM\";\r\n        } else if (min >= 45 && min <= 59) {\r\n            resultFor = \"04:00 PM\";\r\n        }\r\n    } else if (hr === 4 && ampm === \"PM\") {\r\n        if (min >= 0 && min <= 14) {\r\n            resultFor = \"04:15 PM\";\r\n        } else if (min >= 15 && min <= 29) {\r\n            resultFor = \"04:30 PM\";\r\n        } else if (min >= 30 && min <= 44) {\r\n            resultFor = \"04:45 PM\";\r\n        } else if (min >= 45 && min <= 59) {\r\n            resultFor = \"05:00 PM\";\r\n        }\r\n    } else if (hr === 5 && ampm === \"PM\") {\r\n        if (min >= 0 && min <= 14) {\r\n            resultFor = \"05:15 PM\";\r\n        } else if (min >= 15 && min <= 29) {\r\n            resultFor = \"05:30 PM\";\r\n        } else if (min >= 30 && min <= 44) {\r\n            resultFor = \"05:45 PM\";\r\n        } else if (min >= 45 && min <= 59) {\r\n            resultFor = \"06:00 PM\";\r\n        }\r\n    } else if (hr === 6 && ampm === \"PM\") {\r\n        if (min >= 0 && min <= 14) {\r\n            resultFor = \"06:15 PM\";\r\n        } else if (min >= 15 && min <= 29) {\r\n            resultFor = \"06:30 PM\";\r\n        } else if (min >= 30 && min <= 44) {\r\n            resultFor = \"06:45 PM\";\r\n        } else if (min >= 45 && min <= 59) {\r\n            resultFor = \"07:00 PM\";\r\n        }\r\n    } else if (hr === 7 && ampm === \"PM\") {\r\n        if (min >= 0 && min <= 14) {\r\n            resultFor = \"07:15 PM\";\r\n        } else if (min >= 15 && min <= 29) {\r\n            resultFor = \"07:30 PM\";\r\n        } else if (min >= 30 && min <= 44) {\r\n            resultFor = \"07:45 PM\";\r\n        } else if (min >= 45 && min <= 59) {\r\n            resultFor = \"08:00 PM\";\r\n        }\r\n    } else if (hr === 8 && ampm === \"PM\") {\r\n        if (min >= 0 && min <= 14) {\r\n            resultFor = \"08:15 PM\";\r\n        } else if (min >= 15 && min <= 29) {\r\n            resultFor = \"08:30 PM\";\r\n        } else if (min >= 30 && min <= 44) {\r\n            resultFor = \"08:45 PM\";\r\n        } else if (min >= 45 && min <= 59) {\r\n            resultFor = \"09:00 PM\";\r\n        }\r\n    } else if (hr === 9 && ampm === \"PM\") {\r\n        if (min >= 0 && min <= 14) {\r\n            resultFor = \"09:15 PM\";\r\n        } else if (min >= 15 && min <= 29) {\r\n            resultFor = \"09:30 PM\";\r\n        } else if (min >= 30 && min <= 44) {\r\n            resultFor = \"09:45 PM\";\r\n        } else if (min >= 45 && min <= 59) {\r\n            resultFor = \"10:00 PM\";\r\n        }\r\n    }\r\n    return resultFor;\r\n};\r\n\r\nconst getResultForTheDay = (hr, min, ampm) => {\r\n    let resultForArr = [];\r\n    if (hr === 8 && ampm === \"AM\") {\r\n        if (min >= 0 && min <= 14) {\r\n            resultForArr = [\"08:00 AM\"];\r\n        } else if (min >= 15 && min <= 29) {\r\n            resultForArr = [\"08:00 AM\", \"08:15 AM\"];\r\n        } else if (min >= 30 && min <= 44) {\r\n            resultForArr = [\"08:00 AM\", \"08:15 AM\", \"08:30 AM\"];\r\n        } else if (min >= 45 && min <= 59) {\r\n            resultForArr = [\"08:00 AM\", \"08:15 AM\", \"08:30 AM\", \"08:45 AM\"];\r\n        }\r\n    } else if (hr === 9 && ampm === \"AM\") {\r\n        if (min >= 0 && min <= 14) {\r\n            resultForArr = [\"08:00 AM\", \"08:15 AM\", \"08:30 AM\", \"08:45 AM\", \"09:00 AM\"];\r\n        } else if (min >= 15 && min <= 29) {\r\n            resultForArr = [\"08:00 AM\", \"08:15 AM\", \"08:30 AM\", \"08:45 AM\", \"09:00 AM\", \"09:15 AM\"];\r\n        } else if (min >= 30 && min <= 44) {\r\n            resultForArr = [\"08:00 AM\", \"08:15 AM\", \"08:30 AM\", \"08:45 AM\", \"09:00 AM\", \"09:15 AM\", \"09:30 AM\"];\r\n        } else if (min >= 45 && min <= 59) {\r\n            resultForArr = [\"08:00 AM\", \"08:15 AM\", \"08:30 AM\", \"08:45 AM\", \"09:00 AM\", \"09:15 AM\", \"09:30 AM\", \"09:45 AM\"];\r\n        }\r\n    } else if (hr === 10 && ampm === \"AM\") {\r\n        if (min >= 0 && min <= 14) {\r\n            resultForArr = [\"08:00 AM\", \"08:15 AM\", \"08:30 AM\", \"08:45 AM\", \"09:00 AM\", \"09:15 AM\", \"09:30 AM\", \"09:45 AM\", \"10:00 AM\"];\r\n        } else if (min >= 15 && min <= 29) {\r\n            resultForArr = [\"08:00 AM\", \"08:15 AM\", \"08:30 AM\", \"08:45 AM\", \"09:00 AM\", \"09:15 AM\", \"09:30 AM\", \"09:45 AM\", \"10:00 AM\", \"10:15 AM\"];\r\n        } else if (min >= 30 && min <= 44) {\r\n            resultForArr = [\"08:00 AM\", \"08:15 AM\", \"08:30 AM\", \"08:45 AM\", \"09:00 AM\", \"09:15 AM\", \"09:30 AM\", \"09:45 AM\", \"10:00 AM\", \"10:15 AM\", \"10:30 AM\"];\r\n        } else if (min >= 45 && min <= 59) {\r\n            resultForArr = [\"08:00 AM\", \"08:15 AM\", \"08:30 AM\", \"08:45 AM\", \"09:00 AM\", \"09:15 AM\", \"09:30 AM\", \"09:45 AM\", \"10:00 AM\", \"10:15 AM\", \"10:30 AM\", \"10:45 AM\"];\r\n        }\r\n    } else if (hr === 11 && ampm === \"AM\") {\r\n        if (min >= 0 && min <= 14) {\r\n            resultForArr = [\r\n                \"08:00 AM\",\r\n                \"08:15 AM\",\r\n                \"08:30 AM\",\r\n                \"08:45 AM\",\r\n                \"09:00 AM\",\r\n                \"09:15 AM\",\r\n                \"09:30 AM\",\r\n                \"09:45 AM\",\r\n                \"10:00 AM\",\r\n                \"10:15 AM\",\r\n                \"10:30 AM\",\r\n                \"10:45 AM\",\r\n                \"11:00 AM\",\r\n            ];\r\n        } else if (min >= 15 && min <= 29) {\r\n            resultForArr = [\r\n                \"08:00 AM\",\r\n                \"08:15 AM\",\r\n                \"08:30 AM\",\r\n                \"08:45 AM\",\r\n                \"09:00 AM\",\r\n                \"09:15 AM\",\r\n                \"09:30 AM\",\r\n                \"09:45 AM\",\r\n                \"10:00 AM\",\r\n                \"10:15 AM\",\r\n                \"10:30 AM\",\r\n                \"10:45 AM\",\r\n                \"11:00 AM\",\r\n                \"11:15 AM\",\r\n            ];\r\n        } else if (min >= 30 && min <= 44) {\r\n            resultForArr = [\r\n                \"08:00 AM\",\r\n                \"08:15 AM\",\r\n                \"08:30 AM\",\r\n                \"08:45 AM\",\r\n                \"09:00 AM\",\r\n                \"09:15 AM\",\r\n                \"09:30 AM\",\r\n                \"09:45 AM\",\r\n                \"10:00 AM\",\r\n                \"10:15 AM\",\r\n                \"10:30 AM\",\r\n                \"10:45 AM\",\r\n                \"11:00 AM\",\r\n                \"11:15 AM\",\r\n                \"11:30 AM\",\r\n            ];\r\n        } else if (min >= 45 && min <= 59) {\r\n            resultForArr = [\r\n                \"08:00 AM\",\r\n                \"08:15 AM\",\r\n                \"08:30 AM\",\r\n                \"08:45 AM\",\r\n                \"09:00 AM\",\r\n                \"09:15 AM\",\r\n                \"09:30 AM\",\r\n                \"09:45 AM\",\r\n                \"10:00 AM\",\r\n                \"10:15 AM\",\r\n                \"10:30 AM\",\r\n                \"10:45 AM\",\r\n                \"11:00 AM\",\r\n                \"11:15 AM\",\r\n                \"11:30 AM\",\r\n                \"11:45 AM\",\r\n            ];\r\n        }\r\n    } else if (hr === 12 && ampm === \"PM\") {\r\n        if (min >= 0 && min <= 14) {\r\n            resultForArr = [\r\n                \"08:00 AM\",\r\n                \"08:15 AM\",\r\n                \"08:30 AM\",\r\n                \"08:45 AM\",\r\n                \"09:00 AM\",\r\n                \"09:15 AM\",\r\n                \"09:30 AM\",\r\n                \"09:45 AM\",\r\n                \"10:00 AM\",\r\n                \"10:15 AM\",\r\n                \"10:30 AM\",\r\n                \"10:45 AM\",\r\n                \"11:00 AM\",\r\n                \"11:15 AM\",\r\n                \"11:30 AM\",\r\n                \"11:45 AM\",\r\n                \"12:00 PM\",\r\n            ];\r\n        } else if (min >= 15 && min <= 29) {\r\n            resultForArr = [\r\n                \"08:00 AM\",\r\n                \"08:15 AM\",\r\n                \"08:30 AM\",\r\n                \"08:45 AM\",\r\n                \"09:00 AM\",\r\n                \"09:15 AM\",\r\n                \"09:30 AM\",\r\n                \"09:45 AM\",\r\n                \"10:00 AM\",\r\n                \"10:15 AM\",\r\n                \"10:30 AM\",\r\n                \"10:45 AM\",\r\n                \"11:00 AM\",\r\n                \"11:15 AM\",\r\n                \"11:30 AM\",\r\n                \"11:45 AM\",\r\n                \"12:00 PM\",\r\n                \"12:15 PM\",\r\n            ];\r\n        } else if (min >= 30 && min <= 44) {\r\n            resultForArr = [\r\n                \"08:00 AM\",\r\n                \"08:15 AM\",\r\n                \"08:30 AM\",\r\n                \"08:45 AM\",\r\n                \"09:00 AM\",\r\n                \"09:15 AM\",\r\n                \"09:30 AM\",\r\n                \"09:45 AM\",\r\n                \"10:00 AM\",\r\n                \"10:15 AM\",\r\n                \"10:30 AM\",\r\n                \"10:45 AM\",\r\n                \"11:00 AM\",\r\n                \"11:15 AM\",\r\n                \"11:30 AM\",\r\n                \"11:45 AM\",\r\n                \"12:00 PM\",\r\n                \"12:15 PM\",\r\n                \"12:30 PM\",\r\n            ];\r\n        } else if (min >= 45 && min <= 59) {\r\n            resultForArr = [\r\n                \"08:00 AM\",\r\n                \"08:15 AM\",\r\n                \"08:30 AM\",\r\n                \"08:45 AM\",\r\n                \"09:00 AM\",\r\n                \"09:15 AM\",\r\n                \"09:30 AM\",\r\n                \"09:45 AM\",\r\n                \"10:00 AM\",\r\n                \"10:15 AM\",\r\n                \"10:30 AM\",\r\n                \"10:45 AM\",\r\n                \"11:00 AM\",\r\n                \"11:15 AM\",\r\n                \"11:30 AM\",\r\n                \"11:45 AM\",\r\n                \"12:00 PM\",\r\n                \"12:15 PM\",\r\n                \"12:30 PM\",\r\n                \"12:45 PM\",\r\n            ];\r\n        }\r\n    } else if (hr === 1 && ampm === \"PM\") {\r\n        if (min >= 0 && min <= 14) {\r\n            resultForArr = [\r\n                \"08:00 AM\",\r\n                \"08:15 AM\",\r\n                \"08:30 AM\",\r\n                \"08:45 AM\",\r\n                \"09:00 AM\",\r\n                \"09:15 AM\",\r\n                \"09:30 AM\",\r\n                \"09:45 AM\",\r\n                \"10:00 AM\",\r\n                \"10:15 AM\",\r\n                \"10:30 AM\",\r\n                \"10:45 AM\",\r\n                \"11:00 AM\",\r\n                \"11:15 AM\",\r\n                \"11:30 AM\",\r\n                \"11:45 AM\",\r\n                \"12:00 PM\",\r\n                \"12:15 PM\",\r\n                \"12:30 PM\",\r\n                \"12:45 PM\",\r\n                \"01:00 PM\",\r\n            ];\r\n        } else if (min >= 15 && min <= 29) {\r\n            resultForArr = [\r\n                \"08:00 AM\",\r\n                \"08:15 AM\",\r\n                \"08:30 AM\",\r\n                \"08:45 AM\",\r\n                \"09:00 AM\",\r\n                \"09:15 AM\",\r\n                \"09:30 AM\",\r\n                \"09:45 AM\",\r\n                \"10:00 AM\",\r\n                \"10:15 AM\",\r\n                \"10:30 AM\",\r\n                \"10:45 AM\",\r\n                \"11:00 AM\",\r\n                \"11:15 AM\",\r\n                \"11:30 AM\",\r\n                \"11:45 AM\",\r\n                \"12:00 PM\",\r\n                \"12:15 PM\",\r\n                \"12:30 PM\",\r\n                \"12:45 PM\",\r\n                \"01:00 PM\",\r\n                \"01:15 PM\",\r\n            ];\r\n        } else if (min >= 30 && min <= 44) {\r\n            resultForArr = [\r\n                \"08:00 AM\",\r\n                \"08:15 AM\",\r\n                \"08:30 AM\",\r\n                \"08:45 AM\",\r\n                \"09:00 AM\",\r\n                \"09:15 AM\",\r\n                \"09:30 AM\",\r\n                \"09:45 AM\",\r\n                \"10:00 AM\",\r\n                \"10:15 AM\",\r\n                \"10:30 AM\",\r\n                \"10:45 AM\",\r\n                \"11:00 AM\",\r\n                \"11:15 AM\",\r\n                \"11:30 AM\",\r\n                \"11:45 AM\",\r\n                \"12:00 PM\",\r\n                \"12:15 PM\",\r\n                \"12:30 PM\",\r\n                \"12:45 PM\",\r\n                \"01:00 PM\",\r\n                \"01:15 PM\",\r\n                \"01:30 PM\",\r\n            ];\r\n        } else if (min >= 45 && min <= 59) {\r\n            resultForArr = [\r\n                \"08:00 AM\",\r\n                \"08:15 AM\",\r\n                \"08:30 AM\",\r\n                \"08:45 AM\",\r\n                \"09:00 AM\",\r\n                \"09:15 AM\",\r\n                \"09:30 AM\",\r\n                \"09:45 AM\",\r\n                \"10:00 AM\",\r\n                \"10:15 AM\",\r\n                \"10:30 AM\",\r\n                \"10:45 AM\",\r\n                \"11:00 AM\",\r\n                \"11:15 AM\",\r\n                \"11:30 AM\",\r\n                \"11:45 AM\",\r\n                \"12:00 PM\",\r\n                \"12:15 PM\",\r\n                \"12:30 PM\",\r\n                \"12:45 PM\",\r\n                \"01:00 PM\",\r\n                \"01:15 PM\",\r\n                \"01:30 PM\",\r\n                \"01:45 PM\",\r\n            ];\r\n        }\r\n    } else if (hr === 2 && ampm === \"PM\") {\r\n        if (min >= 0 && min <= 14) {\r\n            resultForArr = [\r\n                \"08:00 AM\",\r\n                \"08:15 AM\",\r\n                \"08:30 AM\",\r\n                \"08:45 AM\",\r\n                \"09:00 AM\",\r\n                \"09:15 AM\",\r\n                \"09:30 AM\",\r\n                \"09:45 AM\",\r\n                \"10:00 AM\",\r\n                \"10:15 AM\",\r\n                \"10:30 AM\",\r\n                \"10:45 AM\",\r\n                \"11:00 AM\",\r\n                \"11:15 AM\",\r\n                \"11:30 AM\",\r\n                \"11:45 AM\",\r\n                \"12:00 PM\",\r\n                \"12:15 PM\",\r\n                \"12:30 PM\",\r\n                \"12:45 PM\",\r\n                \"01:00 PM\",\r\n                \"01:15 PM\",\r\n                \"01:30 PM\",\r\n                \"01:45 PM\",\r\n                \"02:00 PM\",\r\n            ];\r\n        } else if (min >= 15 && min <= 29) {\r\n            resultForArr = [\r\n                \"08:00 AM\",\r\n                \"08:15 AM\",\r\n                \"08:30 AM\",\r\n                \"08:45 AM\",\r\n                \"09:00 AM\",\r\n                \"09:15 AM\",\r\n                \"09:30 AM\",\r\n                \"09:45 AM\",\r\n                \"10:00 AM\",\r\n                \"10:15 AM\",\r\n                \"10:30 AM\",\r\n                \"10:45 AM\",\r\n                \"11:00 AM\",\r\n                \"11:15 AM\",\r\n                \"11:30 AM\",\r\n                \"11:45 AM\",\r\n                \"12:00 PM\",\r\n                \"12:15 PM\",\r\n                \"12:30 PM\",\r\n                \"12:45 PM\",\r\n                \"01:00 PM\",\r\n                \"01:15 PM\",\r\n                \"01:30 PM\",\r\n                \"01:45 PM\",\r\n                \"02:00 PM\",\r\n                \"02:15 PM\",\r\n            ];\r\n        } else if (min >= 30 && min <= 44) {\r\n            resultForArr = [\r\n                \"08:00 AM\",\r\n                \"08:15 AM\",\r\n                \"08:30 AM\",\r\n                \"08:45 AM\",\r\n                \"09:00 AM\",\r\n                \"09:15 AM\",\r\n                \"09:30 AM\",\r\n                \"09:45 AM\",\r\n                \"10:00 AM\",\r\n                \"10:15 AM\",\r\n                \"10:30 AM\",\r\n                \"10:45 AM\",\r\n                \"11:00 AM\",\r\n                \"11:15 AM\",\r\n                \"11:30 AM\",\r\n                \"11:45 AM\",\r\n                \"12:00 PM\",\r\n                \"12:15 PM\",\r\n                \"12:30 PM\",\r\n                \"12:45 PM\",\r\n                \"01:00 PM\",\r\n                \"01:15 PM\",\r\n                \"01:30 PM\",\r\n                \"01:45 PM\",\r\n                \"02:00 PM\",\r\n                \"02:15 PM\",\r\n                \"02:30 PM\",\r\n            ];\r\n        } else if (min >= 45 && min <= 59) {\r\n            resultForArr = [\r\n                \"08:00 AM\",\r\n                \"08:15 AM\",\r\n                \"08:30 AM\",\r\n                \"08:45 AM\",\r\n                \"09:00 AM\",\r\n                \"09:15 AM\",\r\n                \"09:30 AM\",\r\n                \"09:45 AM\",\r\n                \"10:00 AM\",\r\n                \"10:15 AM\",\r\n                \"10:30 AM\",\r\n                \"10:45 AM\",\r\n                \"11:00 AM\",\r\n                \"11:15 AM\",\r\n                \"11:30 AM\",\r\n                \"11:45 AM\",\r\n                \"12:00 PM\",\r\n                \"12:15 PM\",\r\n                \"12:30 PM\",\r\n                \"12:45 PM\",\r\n                \"01:00 PM\",\r\n                \"01:15 PM\",\r\n                \"01:30 PM\",\r\n                \"01:45 PM\",\r\n                \"02:00 PM\",\r\n                \"02:15 PM\",\r\n                \"02:30 PM\",\r\n                \"02:45 PM\",\r\n            ];\r\n        }\r\n    } else if (hr === 3 && ampm === \"PM\") {\r\n        if (min >= 0 && min <= 14) {\r\n            resultForArr = [\r\n                \"08:00 AM\",\r\n                \"08:15 AM\",\r\n                \"08:30 AM\",\r\n                \"08:45 AM\",\r\n                \"09:00 AM\",\r\n                \"09:15 AM\",\r\n                \"09:30 AM\",\r\n                \"09:45 AM\",\r\n                \"10:00 AM\",\r\n                \"10:15 AM\",\r\n                \"10:30 AM\",\r\n                \"10:45 AM\",\r\n                \"11:00 AM\",\r\n                \"11:15 AM\",\r\n                \"11:30 AM\",\r\n                \"11:45 AM\",\r\n                \"12:00 PM\",\r\n                \"12:15 PM\",\r\n                \"12:30 PM\",\r\n                \"12:45 PM\",\r\n                \"01:00 PM\",\r\n                \"01:15 PM\",\r\n                \"01:30 PM\",\r\n                \"01:45 PM\",\r\n                \"02:00 PM\",\r\n                \"02:15 PM\",\r\n                \"02:30 PM\",\r\n                \"02:45 PM\",\r\n                \"03:00 PM\",\r\n            ];\r\n        } else if (min >= 15 && min <= 29) {\r\n            resultForArr = [\r\n                \"08:00 AM\",\r\n                \"08:15 AM\",\r\n                \"08:30 AM\",\r\n                \"08:45 AM\",\r\n                \"09:00 AM\",\r\n                \"09:15 AM\",\r\n                \"09:30 AM\",\r\n                \"09:45 AM\",\r\n                \"10:00 AM\",\r\n                \"10:15 AM\",\r\n                \"10:30 AM\",\r\n                \"10:45 AM\",\r\n                \"11:00 AM\",\r\n                \"11:15 AM\",\r\n                \"11:30 AM\",\r\n                \"11:45 AM\",\r\n                \"12:00 PM\",\r\n                \"12:15 PM\",\r\n                \"12:30 PM\",\r\n                \"12:45 PM\",\r\n                \"01:00 PM\",\r\n                \"01:15 PM\",\r\n                \"01:30 PM\",\r\n                \"01:45 PM\",\r\n                \"02:00 PM\",\r\n                \"02:15 PM\",\r\n                \"02:30 PM\",\r\n                \"02:45 PM\",\r\n                \"03:00 PM\",\r\n                \"03:15 PM\",\r\n            ];\r\n        } else if (min >= 30 && min <= 44) {\r\n            resultForArr = [\r\n                \"08:00 AM\",\r\n                \"08:15 AM\",\r\n                \"08:30 AM\",\r\n                \"08:45 AM\",\r\n                \"09:00 AM\",\r\n                \"09:15 AM\",\r\n                \"09:30 AM\",\r\n                \"09:45 AM\",\r\n                \"10:00 AM\",\r\n                \"10:15 AM\",\r\n                \"10:30 AM\",\r\n                \"10:45 AM\",\r\n                \"11:00 AM\",\r\n                \"11:15 AM\",\r\n                \"11:30 AM\",\r\n                \"11:45 AM\",\r\n                \"12:00 PM\",\r\n                \"12:15 PM\",\r\n                \"12:30 PM\",\r\n                \"12:45 PM\",\r\n                \"01:00 PM\",\r\n                \"01:15 PM\",\r\n                \"01:30 PM\",\r\n                \"01:45 PM\",\r\n                \"02:00 PM\",\r\n                \"02:15 PM\",\r\n                \"02:30 PM\",\r\n                \"02:45 PM\",\r\n                \"03:00 PM\",\r\n                \"03:15 PM\",\r\n                \"03:30 PM\",\r\n            ];\r\n        } else if (min >= 45 && min <= 59) {\r\n            resultForArr = [\r\n                \"08:00 AM\",\r\n                \"08:15 AM\",\r\n                \"08:30 AM\",\r\n                \"08:45 AM\",\r\n                \"09:00 AM\",\r\n                \"09:15 AM\",\r\n                \"09:30 AM\",\r\n                \"09:45 AM\",\r\n                \"10:00 AM\",\r\n                \"10:15 AM\",\r\n                \"10:30 AM\",\r\n                \"10:45 AM\",\r\n                \"11:00 AM\",\r\n                \"11:15 AM\",\r\n                \"11:30 AM\",\r\n                \"11:45 AM\",\r\n                \"12:00 PM\",\r\n                \"12:15 PM\",\r\n                \"12:30 PM\",\r\n                \"12:45 PM\",\r\n                \"01:00 PM\",\r\n                \"01:15 PM\",\r\n                \"01:30 PM\",\r\n                \"01:45 PM\",\r\n                \"02:00 PM\",\r\n                \"02:15 PM\",\r\n                \"02:30 PM\",\r\n                \"02:45 PM\",\r\n                \"03:00 PM\",\r\n                \"03:15 PM\",\r\n                \"03:30 PM\",\r\n                \"03:45 PM\",\r\n            ];\r\n        }\r\n    } else if (hr === 4 && ampm === \"PM\") {\r\n        if (min >= 0 && min <= 14) {\r\n            resultForArr = [\r\n                \"08:00 AM\",\r\n                \"08:15 AM\",\r\n                \"08:30 AM\",\r\n                \"08:45 AM\",\r\n                \"09:00 AM\",\r\n                \"09:15 AM\",\r\n                \"09:30 AM\",\r\n                \"09:45 AM\",\r\n                \"10:00 AM\",\r\n                \"10:15 AM\",\r\n                \"10:30 AM\",\r\n                \"10:45 AM\",\r\n                \"11:00 AM\",\r\n                \"11:15 AM\",\r\n                \"11:30 AM\",\r\n                \"11:45 AM\",\r\n                \"12:00 PM\",\r\n                \"12:15 PM\",\r\n                \"12:30 PM\",\r\n                \"12:45 PM\",\r\n                \"01:00 PM\",\r\n                \"01:15 PM\",\r\n                \"01:30 PM\",\r\n                \"01:45 PM\",\r\n                \"02:00 PM\",\r\n                \"02:15 PM\",\r\n                \"02:30 PM\",\r\n                \"02:45 PM\",\r\n                \"03:00 PM\",\r\n                \"03:15 PM\",\r\n                \"03:30 PM\",\r\n                \"03:45 PM\",\r\n                \"04:00 PM\",\r\n            ];\r\n        } else if (min >= 15 && min <= 29) {\r\n            resultForArr = [\r\n                \"08:00 AM\",\r\n                \"08:15 AM\",\r\n                \"08:30 AM\",\r\n                \"08:45 AM\",\r\n                \"09:00 AM\",\r\n                \"09:15 AM\",\r\n                \"09:30 AM\",\r\n                \"09:45 AM\",\r\n                \"10:00 AM\",\r\n                \"10:15 AM\",\r\n                \"10:30 AM\",\r\n                \"10:45 AM\",\r\n                \"11:00 AM\",\r\n                \"11:15 AM\",\r\n                \"11:30 AM\",\r\n                \"11:45 AM\",\r\n                \"12:00 PM\",\r\n                \"12:15 PM\",\r\n                \"12:30 PM\",\r\n                \"12:45 PM\",\r\n                \"01:00 PM\",\r\n                \"01:15 PM\",\r\n                \"01:30 PM\",\r\n                \"01:45 PM\",\r\n                \"02:00 PM\",\r\n                \"02:15 PM\",\r\n                \"02:30 PM\",\r\n                \"02:45 PM\",\r\n                \"03:00 PM\",\r\n                \"03:15 PM\",\r\n                \"03:30 PM\",\r\n                \"03:45 PM\",\r\n                \"04:00 PM\",\r\n                \"04:15 PM\",\r\n            ];\r\n        } else if (min >= 30 && min <= 44) {\r\n            resultForArr = [\r\n                \"08:00 AM\",\r\n                \"08:15 AM\",\r\n                \"08:30 AM\",\r\n                \"08:45 AM\",\r\n                \"09:00 AM\",\r\n                \"09:15 AM\",\r\n                \"09:30 AM\",\r\n                \"09:45 AM\",\r\n                \"10:00 AM\",\r\n                \"10:15 AM\",\r\n                \"10:30 AM\",\r\n                \"10:45 AM\",\r\n                \"11:00 AM\",\r\n                \"11:15 AM\",\r\n                \"11:30 AM\",\r\n                \"11:45 AM\",\r\n                \"12:00 PM\",\r\n                \"12:15 PM\",\r\n                \"12:30 PM\",\r\n                \"12:45 PM\",\r\n                \"01:00 PM\",\r\n                \"01:15 PM\",\r\n                \"01:30 PM\",\r\n                \"01:45 PM\",\r\n                \"02:00 PM\",\r\n                \"02:15 PM\",\r\n                \"02:30 PM\",\r\n                \"02:45 PM\",\r\n                \"03:00 PM\",\r\n                \"03:15 PM\",\r\n                \"03:30 PM\",\r\n                \"03:45 PM\",\r\n                \"04:00 PM\",\r\n                \"04:15 PM\",\r\n                \"04:30 PM\",\r\n            ];\r\n        } else if (min >= 45 && min <= 59) {\r\n            resultForArr = [\r\n                \"08:00 AM\",\r\n                \"08:15 AM\",\r\n                \"08:30 AM\",\r\n                \"08:45 AM\",\r\n                \"09:00 AM\",\r\n                \"09:15 AM\",\r\n                \"09:30 AM\",\r\n                \"09:45 AM\",\r\n                \"10:00 AM\",\r\n                \"10:15 AM\",\r\n                \"10:30 AM\",\r\n                \"10:45 AM\",\r\n                \"11:00 AM\",\r\n                \"11:15 AM\",\r\n                \"11:30 AM\",\r\n                \"11:45 AM\",\r\n                \"12:00 PM\",\r\n                \"12:15 PM\",\r\n                \"12:30 PM\",\r\n                \"12:45 PM\",\r\n                \"01:00 PM\",\r\n                \"01:15 PM\",\r\n                \"01:30 PM\",\r\n                \"01:45 PM\",\r\n                \"02:00 PM\",\r\n                \"02:15 PM\",\r\n                \"02:30 PM\",\r\n                \"02:45 PM\",\r\n                \"03:00 PM\",\r\n                \"03:15 PM\",\r\n                \"03:30 PM\",\r\n                \"03:45 PM\",\r\n                \"04:00 PM\",\r\n                \"04:15 PM\",\r\n                \"04:30 PM\",\r\n                \"04:45 PM\",\r\n            ];\r\n        }\r\n    } else if (hr === 5 && ampm === \"PM\") {\r\n        if (min >= 0 && min <= 14) {\r\n            resultForArr = [\r\n                \"08:00 AM\",\r\n                \"08:15 AM\",\r\n                \"08:30 AM\",\r\n                \"08:45 AM\",\r\n                \"09:00 AM\",\r\n                \"09:15 AM\",\r\n                \"09:30 AM\",\r\n                \"09:45 AM\",\r\n                \"10:00 AM\",\r\n                \"10:15 AM\",\r\n                \"10:30 AM\",\r\n                \"10:45 AM\",\r\n                \"11:00 AM\",\r\n                \"11:15 AM\",\r\n                \"11:30 AM\",\r\n                \"11:45 AM\",\r\n                \"12:00 PM\",\r\n                \"12:15 PM\",\r\n                \"12:30 PM\",\r\n                \"12:45 PM\",\r\n                \"01:00 PM\",\r\n                \"01:15 PM\",\r\n                \"01:30 PM\",\r\n                \"01:45 PM\",\r\n                \"02:00 PM\",\r\n                \"02:15 PM\",\r\n                \"02:30 PM\",\r\n                \"02:45 PM\",\r\n                \"03:00 PM\",\r\n                \"03:15 PM\",\r\n                \"03:30 PM\",\r\n                \"03:45 PM\",\r\n                \"04:00 PM\",\r\n                \"04:15 PM\",\r\n                \"04:30 PM\",\r\n                \"04:45 PM\",\r\n                \"05:00 PM\",\r\n            ];\r\n        } else if (min >= 15 && min <= 29) {\r\n            resultForArr = [\r\n                \"08:00 AM\",\r\n                \"08:15 AM\",\r\n                \"08:30 AM\",\r\n                \"08:45 AM\",\r\n                \"09:00 AM\",\r\n                \"09:15 AM\",\r\n                \"09:30 AM\",\r\n                \"09:45 AM\",\r\n                \"10:00 AM\",\r\n                \"10:15 AM\",\r\n                \"10:30 AM\",\r\n                \"10:45 AM\",\r\n                \"11:00 AM\",\r\n                \"11:15 AM\",\r\n                \"11:30 AM\",\r\n                \"11:45 AM\",\r\n                \"12:00 PM\",\r\n                \"12:15 PM\",\r\n                \"12:30 PM\",\r\n                \"12:45 PM\",\r\n                \"01:00 PM\",\r\n                \"01:15 PM\",\r\n                \"01:30 PM\",\r\n                \"01:45 PM\",\r\n                \"02:00 PM\",\r\n                \"02:15 PM\",\r\n                \"02:30 PM\",\r\n                \"02:45 PM\",\r\n                \"03:00 PM\",\r\n                \"03:15 PM\",\r\n                \"03:30 PM\",\r\n                \"03:45 PM\",\r\n                \"04:00 PM\",\r\n                \"04:15 PM\",\r\n                \"04:30 PM\",\r\n                \"04:45 PM\",\r\n                \"05:00 PM\",\r\n                \"05:15 PM\",\r\n            ];\r\n        } else if (min >= 30 && min <= 44) {\r\n            resultForArr = [\r\n                \"08:00 AM\",\r\n                \"08:15 AM\",\r\n                \"08:30 AM\",\r\n                \"08:45 AM\",\r\n                \"09:00 AM\",\r\n                \"09:15 AM\",\r\n                \"09:30 AM\",\r\n                \"09:45 AM\",\r\n                \"10:00 AM\",\r\n                \"10:15 AM\",\r\n                \"10:30 AM\",\r\n                \"10:45 AM\",\r\n                \"11:00 AM\",\r\n                \"11:15 AM\",\r\n                \"11:30 AM\",\r\n                \"11:45 AM\",\r\n                \"12:00 PM\",\r\n                \"12:15 PM\",\r\n                \"12:30 PM\",\r\n                \"12:45 PM\",\r\n                \"01:00 PM\",\r\n                \"01:15 PM\",\r\n                \"01:30 PM\",\r\n                \"01:45 PM\",\r\n                \"02:00 PM\",\r\n                \"02:15 PM\",\r\n                \"02:30 PM\",\r\n                \"02:45 PM\",\r\n                \"03:00 PM\",\r\n                \"03:15 PM\",\r\n                \"03:30 PM\",\r\n                \"03:45 PM\",\r\n                \"04:00 PM\",\r\n                \"04:15 PM\",\r\n                \"04:30 PM\",\r\n                \"04:45 PM\",\r\n                \"05:00 PM\",\r\n                \"05:15 PM\",\r\n                \"05:30 PM\",\r\n            ];\r\n        } else if (min >= 45 && min <= 59) {\r\n            resultForArr = [\r\n                \"08:00 AM\",\r\n                \"08:15 AM\",\r\n                \"08:30 AM\",\r\n                \"08:45 AM\",\r\n                \"09:00 AM\",\r\n                \"09:15 AM\",\r\n                \"09:30 AM\",\r\n                \"09:45 AM\",\r\n                \"10:00 AM\",\r\n                \"10:15 AM\",\r\n                \"10:30 AM\",\r\n                \"10:45 AM\",\r\n                \"11:00 AM\",\r\n                \"11:15 AM\",\r\n                \"11:30 AM\",\r\n                \"11:45 AM\",\r\n                \"12:00 PM\",\r\n                \"12:15 PM\",\r\n                \"12:30 PM\",\r\n                \"12:45 PM\",\r\n                \"01:00 PM\",\r\n                \"01:15 PM\",\r\n                \"01:30 PM\",\r\n                \"01:45 PM\",\r\n                \"02:00 PM\",\r\n                \"02:15 PM\",\r\n                \"02:30 PM\",\r\n                \"02:45 PM\",\r\n                \"03:00 PM\",\r\n                \"03:15 PM\",\r\n                \"03:30 PM\",\r\n                \"03:45 PM\",\r\n                \"04:00 PM\",\r\n                \"04:15 PM\",\r\n                \"04:30 PM\",\r\n                \"04:45 PM\",\r\n                \"05:00 PM\",\r\n                \"05:15 PM\",\r\n                \"05:30 PM\",\r\n                \"05:45 PM\",\r\n            ];\r\n        }\r\n    } else if (hr === 6 && ampm === \"PM\") {\r\n        if (min >= 0 && min <= 14) {\r\n            resultForArr = [\r\n                \"08:00 AM\",\r\n                \"08:15 AM\",\r\n                \"08:30 AM\",\r\n                \"08:45 AM\",\r\n                \"09:00 AM\",\r\n                \"09:15 AM\",\r\n                \"09:30 AM\",\r\n                \"09:45 AM\",\r\n                \"10:00 AM\",\r\n                \"10:15 AM\",\r\n                \"10:30 AM\",\r\n                \"10:45 AM\",\r\n                \"11:00 AM\",\r\n                \"11:15 AM\",\r\n                \"11:30 AM\",\r\n                \"11:45 AM\",\r\n                \"12:00 PM\",\r\n                \"12:15 PM\",\r\n                \"12:30 PM\",\r\n                \"12:45 PM\",\r\n                \"01:00 PM\",\r\n                \"01:15 PM\",\r\n                \"01:30 PM\",\r\n                \"01:45 PM\",\r\n                \"02:00 PM\",\r\n                \"02:15 PM\",\r\n                \"02:30 PM\",\r\n                \"02:45 PM\",\r\n                \"03:00 PM\",\r\n                \"03:15 PM\",\r\n                \"03:30 PM\",\r\n                \"03:45 PM\",\r\n                \"04:00 PM\",\r\n                \"04:15 PM\",\r\n                \"04:30 PM\",\r\n                \"04:45 PM\",\r\n                \"05:00 PM\",\r\n                \"05:15 PM\",\r\n                \"05:30 PM\",\r\n                \"05:45 PM\",\r\n                \"06:00 PM\",\r\n            ];\r\n        } else if (min >= 15 && min <= 29) {\r\n            resultForArr = [\r\n                \"08:00 AM\",\r\n                \"08:15 AM\",\r\n                \"08:30 AM\",\r\n                \"08:45 AM\",\r\n                \"09:00 AM\",\r\n                \"09:15 AM\",\r\n                \"09:30 AM\",\r\n                \"09:45 AM\",\r\n                \"10:00 AM\",\r\n                \"10:15 AM\",\r\n                \"10:30 AM\",\r\n                \"10:45 AM\",\r\n                \"11:00 AM\",\r\n                \"11:15 AM\",\r\n                \"11:30 AM\",\r\n                \"11:45 AM\",\r\n                \"12:00 PM\",\r\n                \"12:15 PM\",\r\n                \"12:30 PM\",\r\n                \"12:45 PM\",\r\n                \"01:00 PM\",\r\n                \"01:15 PM\",\r\n                \"01:30 PM\",\r\n                \"01:45 PM\",\r\n                \"02:00 PM\",\r\n                \"02:15 PM\",\r\n                \"02:30 PM\",\r\n                \"02:45 PM\",\r\n                \"03:00 PM\",\r\n                \"03:15 PM\",\r\n                \"03:30 PM\",\r\n                \"03:45 PM\",\r\n                \"04:00 PM\",\r\n                \"04:15 PM\",\r\n                \"04:30 PM\",\r\n                \"04:45 PM\",\r\n                \"05:00 PM\",\r\n                \"05:15 PM\",\r\n                \"05:30 PM\",\r\n                \"05:45 PM\",\r\n                \"06:00 PM\",\r\n                \"06:15 PM\",\r\n            ];\r\n        } else if (min >= 30 && min <= 44) {\r\n            resultForArr = [\r\n                \"08:00 AM\",\r\n                \"08:15 AM\",\r\n                \"08:30 AM\",\r\n                \"08:45 AM\",\r\n                \"09:00 AM\",\r\n                \"09:15 AM\",\r\n                \"09:30 AM\",\r\n                \"09:45 AM\",\r\n                \"10:00 AM\",\r\n                \"10:15 AM\",\r\n                \"10:30 AM\",\r\n                \"10:45 AM\",\r\n                \"11:00 AM\",\r\n                \"11:15 AM\",\r\n                \"11:30 AM\",\r\n                \"11:45 AM\",\r\n                \"12:00 PM\",\r\n                \"12:15 PM\",\r\n                \"12:30 PM\",\r\n                \"12:45 PM\",\r\n                \"01:00 PM\",\r\n                \"01:15 PM\",\r\n                \"01:30 PM\",\r\n                \"01:45 PM\",\r\n                \"02:00 PM\",\r\n                \"02:15 PM\",\r\n                \"02:30 PM\",\r\n                \"02:45 PM\",\r\n                \"03:00 PM\",\r\n                \"03:15 PM\",\r\n                \"03:30 PM\",\r\n                \"03:45 PM\",\r\n                \"04:00 PM\",\r\n                \"04:15 PM\",\r\n                \"04:30 PM\",\r\n                \"04:45 PM\",\r\n                \"05:00 PM\",\r\n                \"05:15 PM\",\r\n                \"05:30 PM\",\r\n                \"05:45 PM\",\r\n                \"06:00 PM\",\r\n                \"06:15 PM\",\r\n                \"06:30 PM\",\r\n            ];\r\n        } else if (min >= 45 && min <= 59) {\r\n            resultForArr = [\r\n                \"08:00 AM\",\r\n                \"08:15 AM\",\r\n                \"08:30 AM\",\r\n                \"08:45 AM\",\r\n                \"09:00 AM\",\r\n                \"09:15 AM\",\r\n                \"09:30 AM\",\r\n                \"09:45 AM\",\r\n                \"10:00 AM\",\r\n                \"10:15 AM\",\r\n                \"10:30 AM\",\r\n                \"10:45 AM\",\r\n                \"11:00 AM\",\r\n                \"11:15 AM\",\r\n                \"11:30 AM\",\r\n                \"11:45 AM\",\r\n                \"12:00 PM\",\r\n                \"12:15 PM\",\r\n                \"12:30 PM\",\r\n                \"12:45 PM\",\r\n                \"01:00 PM\",\r\n                \"01:15 PM\",\r\n                \"01:30 PM\",\r\n                \"01:45 PM\",\r\n                \"02:00 PM\",\r\n                \"02:15 PM\",\r\n                \"02:30 PM\",\r\n                \"02:45 PM\",\r\n                \"03:00 PM\",\r\n                \"03:15 PM\",\r\n                \"03:30 PM\",\r\n                \"03:45 PM\",\r\n                \"04:00 PM\",\r\n                \"04:15 PM\",\r\n                \"04:30 PM\",\r\n                \"04:45 PM\",\r\n                \"05:00 PM\",\r\n                \"05:15 PM\",\r\n                \"05:30 PM\",\r\n                \"05:45 PM\",\r\n                \"06:00 PM\",\r\n                \"06:15 PM\",\r\n                \"06:30 PM\",\r\n                \"06:45 PM\",\r\n            ];\r\n        }\r\n    } else if (hr === 7 && ampm === \"PM\") {\r\n        if (min >= 0 && min <= 14) {\r\n            resultForArr = [\r\n                \"08:00 AM\",\r\n                \"08:15 AM\",\r\n                \"08:30 AM\",\r\n                \"08:45 AM\",\r\n                \"09:00 AM\",\r\n                \"09:15 AM\",\r\n                \"09:30 AM\",\r\n                \"09:45 AM\",\r\n                \"10:00 AM\",\r\n                \"10:15 AM\",\r\n                \"10:30 AM\",\r\n                \"10:45 AM\",\r\n                \"11:00 AM\",\r\n                \"11:15 AM\",\r\n                \"11:30 AM\",\r\n                \"11:45 AM\",\r\n                \"12:00 PM\",\r\n                \"12:15 PM\",\r\n                \"12:30 PM\",\r\n                \"12:45 PM\",\r\n                \"01:00 PM\",\r\n                \"01:15 PM\",\r\n                \"01:30 PM\",\r\n                \"01:45 PM\",\r\n                \"02:00 PM\",\r\n                \"02:15 PM\",\r\n                \"02:30 PM\",\r\n                \"02:45 PM\",\r\n                \"03:00 PM\",\r\n                \"03:15 PM\",\r\n                \"03:30 PM\",\r\n                \"03:45 PM\",\r\n                \"04:00 PM\",\r\n                \"04:15 PM\",\r\n                \"04:30 PM\",\r\n                \"04:45 PM\",\r\n                \"05:00 PM\",\r\n                \"05:15 PM\",\r\n                \"05:30 PM\",\r\n                \"05:45 PM\",\r\n                \"06:00 PM\",\r\n                \"06:15 PM\",\r\n                \"06:30 PM\",\r\n                \"06:45 PM\",\r\n                \"07:00 PM\",\r\n            ];\r\n        } else if (min >= 15 && min <= 29) {\r\n            resultForArr = [\r\n                \"08:00 AM\",\r\n                \"08:15 AM\",\r\n                \"08:30 AM\",\r\n                \"08:45 AM\",\r\n                \"09:00 AM\",\r\n                \"09:15 AM\",\r\n                \"09:30 AM\",\r\n                \"09:45 AM\",\r\n                \"10:00 AM\",\r\n                \"10:15 AM\",\r\n                \"10:30 AM\",\r\n                \"10:45 AM\",\r\n                \"11:00 AM\",\r\n                \"11:15 AM\",\r\n                \"11:30 AM\",\r\n                \"11:45 AM\",\r\n                \"12:00 PM\",\r\n                \"12:15 PM\",\r\n                \"12:30 PM\",\r\n                \"12:45 PM\",\r\n                \"01:00 PM\",\r\n                \"01:15 PM\",\r\n                \"01:30 PM\",\r\n                \"01:45 PM\",\r\n                \"02:00 PM\",\r\n                \"02:15 PM\",\r\n                \"02:30 PM\",\r\n                \"02:45 PM\",\r\n                \"03:00 PM\",\r\n                \"03:15 PM\",\r\n                \"03:30 PM\",\r\n                \"03:45 PM\",\r\n                \"04:00 PM\",\r\n                \"04:15 PM\",\r\n                \"04:30 PM\",\r\n                \"04:45 PM\",\r\n                \"05:00 PM\",\r\n                \"05:15 PM\",\r\n                \"05:30 PM\",\r\n                \"05:45 PM\",\r\n                \"06:00 PM\",\r\n                \"06:15 PM\",\r\n                \"06:30 PM\",\r\n                \"06:45 PM\",\r\n                \"07:00 PM\",\r\n                \"07:15 PM\",\r\n            ];\r\n        } else if (min >= 30 && min <= 44) {\r\n            resultForArr = [\r\n                \"08:00 AM\",\r\n                \"08:15 AM\",\r\n                \"08:30 AM\",\r\n                \"08:45 AM\",\r\n                \"09:00 AM\",\r\n                \"09:15 AM\",\r\n                \"09:30 AM\",\r\n                \"09:45 AM\",\r\n                \"10:00 AM\",\r\n                \"10:15 AM\",\r\n                \"10:30 AM\",\r\n                \"10:45 AM\",\r\n                \"11:00 AM\",\r\n                \"11:15 AM\",\r\n                \"11:30 AM\",\r\n                \"11:45 AM\",\r\n                \"12:00 PM\",\r\n                \"12:15 PM\",\r\n                \"12:30 PM\",\r\n                \"12:45 PM\",\r\n                \"01:00 PM\",\r\n                \"01:15 PM\",\r\n                \"01:30 PM\",\r\n                \"01:45 PM\",\r\n                \"02:00 PM\",\r\n                \"02:15 PM\",\r\n                \"02:30 PM\",\r\n                \"02:45 PM\",\r\n                \"03:00 PM\",\r\n                \"03:15 PM\",\r\n                \"03:30 PM\",\r\n                \"03:45 PM\",\r\n                \"04:00 PM\",\r\n                \"04:15 PM\",\r\n                \"04:30 PM\",\r\n                \"04:45 PM\",\r\n                \"05:00 PM\",\r\n                \"05:15 PM\",\r\n                \"05:30 PM\",\r\n                \"05:45 PM\",\r\n                \"06:00 PM\",\r\n                \"06:15 PM\",\r\n                \"06:30 PM\",\r\n                \"06:45 PM\",\r\n                \"07:00 PM\",\r\n                \"07:15 PM\",\r\n                \"07:30 PM\",\r\n            ];\r\n        } else if (min >= 45 && min <= 59) {\r\n            resultForArr = [\r\n                \"08:00 AM\",\r\n                \"08:15 AM\",\r\n                \"08:30 AM\",\r\n                \"08:45 AM\",\r\n                \"09:00 AM\",\r\n                \"09:15 AM\",\r\n                \"09:30 AM\",\r\n                \"09:45 AM\",\r\n                \"10:00 AM\",\r\n                \"10:15 AM\",\r\n                \"10:30 AM\",\r\n                \"10:45 AM\",\r\n                \"11:00 AM\",\r\n                \"11:15 AM\",\r\n                \"11:30 AM\",\r\n                \"11:45 AM\",\r\n                \"12:00 PM\",\r\n                \"12:15 PM\",\r\n                \"12:30 PM\",\r\n                \"12:45 PM\",\r\n                \"01:00 PM\",\r\n                \"01:15 PM\",\r\n                \"01:30 PM\",\r\n                \"01:45 PM\",\r\n                \"02:00 PM\",\r\n                \"02:15 PM\",\r\n                \"02:30 PM\",\r\n                \"02:45 PM\",\r\n                \"03:00 PM\",\r\n                \"03:15 PM\",\r\n                \"03:30 PM\",\r\n                \"03:45 PM\",\r\n                \"04:00 PM\",\r\n                \"04:15 PM\",\r\n                \"04:30 PM\",\r\n                \"04:45 PM\",\r\n                \"05:00 PM\",\r\n                \"05:15 PM\",\r\n                \"05:30 PM\",\r\n                \"05:45 PM\",\r\n                \"06:00 PM\",\r\n                \"06:15 PM\",\r\n                \"06:30 PM\",\r\n                \"06:45 PM\",\r\n                \"07:00 PM\",\r\n                \"07:15 PM\",\r\n                \"07:30 PM\",\r\n                \"07:45 PM\",\r\n            ];\r\n        }\r\n    } else if (hr === 8 && ampm === \"PM\") {\r\n        if (min >= 0 && min <= 14) {\r\n            resultForArr = [\r\n                \"08:00 AM\",\r\n                \"08:15 AM\",\r\n                \"08:30 AM\",\r\n                \"08:45 AM\",\r\n                \"09:00 AM\",\r\n                \"09:15 AM\",\r\n                \"09:30 AM\",\r\n                \"09:45 AM\",\r\n                \"10:00 AM\",\r\n                \"10:15 AM\",\r\n                \"10:30 AM\",\r\n                \"10:45 AM\",\r\n                \"11:00 AM\",\r\n                \"11:15 AM\",\r\n                \"11:30 AM\",\r\n                \"11:45 AM\",\r\n                \"12:00 PM\",\r\n                \"12:15 PM\",\r\n                \"12:30 PM\",\r\n                \"12:45 PM\",\r\n                \"01:00 PM\",\r\n                \"01:15 PM\",\r\n                \"01:30 PM\",\r\n                \"01:45 PM\",\r\n                \"02:00 PM\",\r\n                \"02:15 PM\",\r\n                \"02:30 PM\",\r\n                \"02:45 PM\",\r\n                \"03:00 PM\",\r\n                \"03:15 PM\",\r\n                \"03:30 PM\",\r\n                \"03:45 PM\",\r\n                \"04:00 PM\",\r\n                \"04:15 PM\",\r\n                \"04:30 PM\",\r\n                \"04:45 PM\",\r\n                \"05:00 PM\",\r\n                \"05:15 PM\",\r\n                \"05:30 PM\",\r\n                \"05:45 PM\",\r\n                \"06:00 PM\",\r\n                \"06:15 PM\",\r\n                \"06:30 PM\",\r\n                \"06:45 PM\",\r\n                \"07:00 PM\",\r\n                \"07:15 PM\",\r\n                \"07:30 PM\",\r\n                \"07:45 PM\",\r\n                \"08:00 PM\",\r\n            ];\r\n        } else if (min >= 15 && min <= 29) {\r\n            resultForArr = [\r\n                \"08:00 AM\",\r\n                \"08:15 AM\",\r\n                \"08:30 AM\",\r\n                \"08:45 AM\",\r\n                \"09:00 AM\",\r\n                \"09:15 AM\",\r\n                \"09:30 AM\",\r\n                \"09:45 AM\",\r\n                \"10:00 AM\",\r\n                \"10:15 AM\",\r\n                \"10:30 AM\",\r\n                \"10:45 AM\",\r\n                \"11:00 AM\",\r\n                \"11:15 AM\",\r\n                \"11:30 AM\",\r\n                \"11:45 AM\",\r\n                \"12:00 PM\",\r\n                \"12:15 PM\",\r\n                \"12:30 PM\",\r\n                \"12:45 PM\",\r\n                \"01:00 PM\",\r\n                \"01:15 PM\",\r\n                \"01:30 PM\",\r\n                \"01:45 PM\",\r\n                \"02:00 PM\",\r\n                \"02:15 PM\",\r\n                \"02:30 PM\",\r\n                \"02:45 PM\",\r\n                \"03:00 PM\",\r\n                \"03:15 PM\",\r\n                \"03:30 PM\",\r\n                \"03:45 PM\",\r\n                \"04:00 PM\",\r\n                \"04:15 PM\",\r\n                \"04:30 PM\",\r\n                \"04:45 PM\",\r\n                \"05:00 PM\",\r\n                \"05:15 PM\",\r\n                \"05:30 PM\",\r\n                \"05:45 PM\",\r\n                \"06:00 PM\",\r\n                \"06:15 PM\",\r\n                \"06:30 PM\",\r\n                \"06:45 PM\",\r\n                \"07:00 PM\",\r\n                \"07:15 PM\",\r\n                \"07:30 PM\",\r\n                \"07:45 PM\",\r\n                \"08:00 PM\",\r\n                \"08:15 PM\",\r\n            ];\r\n        } else if (min >= 30 && min <= 44) {\r\n            resultForArr = [\r\n                \"08:00 AM\",\r\n                \"08:15 AM\",\r\n                \"08:30 AM\",\r\n                \"08:45 AM\",\r\n                \"09:00 AM\",\r\n                \"09:15 AM\",\r\n                \"09:30 AM\",\r\n                \"09:45 AM\",\r\n                \"10:00 AM\",\r\n                \"10:15 AM\",\r\n                \"10:30 AM\",\r\n                \"10:45 AM\",\r\n                \"11:00 AM\",\r\n                \"11:15 AM\",\r\n                \"11:30 AM\",\r\n                \"11:45 AM\",\r\n                \"12:00 PM\",\r\n                \"12:15 PM\",\r\n                \"12:30 PM\",\r\n                \"12:45 PM\",\r\n                \"01:00 PM\",\r\n                \"01:15 PM\",\r\n                \"01:30 PM\",\r\n                \"01:45 PM\",\r\n                \"02:00 PM\",\r\n                \"02:15 PM\",\r\n                \"02:30 PM\",\r\n                \"02:45 PM\",\r\n                \"03:00 PM\",\r\n                \"03:15 PM\",\r\n                \"03:30 PM\",\r\n                \"03:45 PM\",\r\n                \"04:00 PM\",\r\n                \"04:15 PM\",\r\n                \"04:30 PM\",\r\n                \"04:45 PM\",\r\n                \"05:00 PM\",\r\n                \"05:15 PM\",\r\n                \"05:30 PM\",\r\n                \"05:45 PM\",\r\n                \"06:00 PM\",\r\n                \"06:15 PM\",\r\n                \"06:30 PM\",\r\n                \"06:45 PM\",\r\n                \"07:00 PM\",\r\n                \"07:15 PM\",\r\n                \"07:30 PM\",\r\n                \"07:45 PM\",\r\n                \"08:00 PM\",\r\n                \"08:15 PM\",\r\n                \"08:30 PM\",\r\n            ];\r\n        } else if (min >= 45 && min <= 59) {\r\n            resultForArr = [\r\n                \"08:00 AM\",\r\n                \"08:15 AM\",\r\n                \"08:30 AM\",\r\n                \"08:45 AM\",\r\n                \"09:00 AM\",\r\n                \"09:15 AM\",\r\n                \"09:30 AM\",\r\n                \"09:45 AM\",\r\n                \"10:00 AM\",\r\n                \"10:15 AM\",\r\n                \"10:30 AM\",\r\n                \"10:45 AM\",\r\n                \"11:00 AM\",\r\n                \"11:15 AM\",\r\n                \"11:30 AM\",\r\n                \"11:45 AM\",\r\n                \"12:00 PM\",\r\n                \"12:15 PM\",\r\n                \"12:30 PM\",\r\n                \"12:45 PM\",\r\n                \"01:00 PM\",\r\n                \"01:15 PM\",\r\n                \"01:30 PM\",\r\n                \"01:45 PM\",\r\n                \"02:00 PM\",\r\n                \"02:15 PM\",\r\n                \"02:30 PM\",\r\n                \"02:45 PM\",\r\n                \"03:00 PM\",\r\n                \"03:15 PM\",\r\n                \"03:30 PM\",\r\n                \"03:45 PM\",\r\n                \"04:00 PM\",\r\n                \"04:15 PM\",\r\n                \"04:30 PM\",\r\n                \"04:45 PM\",\r\n                \"05:00 PM\",\r\n                \"05:15 PM\",\r\n                \"05:30 PM\",\r\n                \"05:45 PM\",\r\n                \"06:00 PM\",\r\n                \"06:15 PM\",\r\n                \"06:30 PM\",\r\n                \"06:45 PM\",\r\n                \"07:00 PM\",\r\n                \"07:15 PM\",\r\n                \"07:30 PM\",\r\n                \"07:45 PM\",\r\n                \"08:00 PM\",\r\n                \"08:15 PM\",\r\n                \"08:30 PM\",\r\n                \"08:45 PM\",\r\n            ];\r\n        }\r\n    } else if (hr === 9 && ampm === \"PM\") {\r\n        if (min >= 0 && min <= 14) {\r\n            resultForArr = [\r\n                \"08:00 AM\",\r\n                \"08:15 AM\",\r\n                \"08:30 AM\",\r\n                \"08:45 AM\",\r\n                \"09:00 AM\",\r\n                \"09:15 AM\",\r\n                \"09:30 AM\",\r\n                \"09:45 AM\",\r\n                \"10:00 AM\",\r\n                \"10:15 AM\",\r\n                \"10:30 AM\",\r\n                \"10:45 AM\",\r\n                \"11:00 AM\",\r\n                \"11:15 AM\",\r\n                \"11:30 AM\",\r\n                \"11:45 AM\",\r\n                \"12:00 PM\",\r\n                \"12:15 PM\",\r\n                \"12:30 PM\",\r\n                \"12:45 PM\",\r\n                \"01:00 PM\",\r\n                \"01:15 PM\",\r\n                \"01:30 PM\",\r\n                \"01:45 PM\",\r\n                \"02:00 PM\",\r\n                \"02:15 PM\",\r\n                \"02:30 PM\",\r\n                \"02:45 PM\",\r\n                \"03:00 PM\",\r\n                \"03:15 PM\",\r\n                \"03:30 PM\",\r\n                \"03:45 PM\",\r\n                \"04:00 PM\",\r\n                \"04:15 PM\",\r\n                \"04:30 PM\",\r\n                \"04:45 PM\",\r\n                \"05:00 PM\",\r\n                \"05:15 PM\",\r\n                \"05:30 PM\",\r\n                \"05:45 PM\",\r\n                \"06:00 PM\",\r\n                \"06:15 PM\",\r\n                \"06:30 PM\",\r\n                \"06:45 PM\",\r\n                \"07:00 PM\",\r\n                \"07:15 PM\",\r\n                \"07:30 PM\",\r\n                \"07:45 PM\",\r\n                \"08:00 PM\",\r\n                \"08:15 PM\",\r\n                \"08:30 PM\",\r\n                \"08:45 PM\",\r\n                \"09:00 PM\",\r\n            ];\r\n        } else if (min >= 15 && min <= 29) {\r\n            resultForArr = [\r\n                \"08:00 AM\",\r\n                \"08:15 AM\",\r\n                \"08:30 AM\",\r\n                \"08:45 AM\",\r\n                \"09:00 AM\",\r\n                \"09:15 AM\",\r\n                \"09:30 AM\",\r\n                \"09:45 AM\",\r\n                \"10:00 AM\",\r\n                \"10:15 AM\",\r\n                \"10:30 AM\",\r\n                \"10:45 AM\",\r\n                \"11:00 AM\",\r\n                \"11:15 AM\",\r\n                \"11:30 AM\",\r\n                \"11:45 AM\",\r\n                \"12:00 PM\",\r\n                \"12:15 PM\",\r\n                \"12:30 PM\",\r\n                \"12:45 PM\",\r\n                \"01:00 PM\",\r\n                \"01:15 PM\",\r\n                \"01:30 PM\",\r\n                \"01:45 PM\",\r\n                \"02:00 PM\",\r\n                \"02:15 PM\",\r\n                \"02:30 PM\",\r\n                \"02:45 PM\",\r\n                \"03:00 PM\",\r\n                \"03:15 PM\",\r\n                \"03:30 PM\",\r\n                \"03:45 PM\",\r\n                \"04:00 PM\",\r\n                \"04:15 PM\",\r\n                \"04:30 PM\",\r\n                \"04:45 PM\",\r\n                \"05:00 PM\",\r\n                \"05:15 PM\",\r\n                \"05:30 PM\",\r\n                \"05:45 PM\",\r\n                \"06:00 PM\",\r\n                \"06:15 PM\",\r\n                \"06:30 PM\",\r\n                \"06:45 PM\",\r\n                \"07:00 PM\",\r\n                \"07:15 PM\",\r\n                \"07:30 PM\",\r\n                \"07:45 PM\",\r\n                \"08:00 PM\",\r\n                \"08:15 PM\",\r\n                \"08:30 PM\",\r\n                \"08:45 PM\",\r\n                \"09:00 PM\",\r\n                \"09:15 PM\",\r\n            ];\r\n        } else if (min >= 30 && min <= 44) {\r\n            resultForArr = [\r\n                \"08:00 AM\",\r\n                \"08:15 AM\",\r\n                \"08:30 AM\",\r\n                \"08:45 AM\",\r\n                \"09:00 AM\",\r\n                \"09:15 AM\",\r\n                \"09:30 AM\",\r\n                \"09:45 AM\",\r\n                \"10:00 AM\",\r\n                \"10:15 AM\",\r\n                \"10:30 AM\",\r\n                \"10:45 AM\",\r\n                \"11:00 AM\",\r\n                \"11:15 AM\",\r\n                \"11:30 AM\",\r\n                \"11:45 AM\",\r\n                \"12:00 PM\",\r\n                \"12:15 PM\",\r\n                \"12:30 PM\",\r\n                \"12:45 PM\",\r\n                \"01:00 PM\",\r\n                \"01:15 PM\",\r\n                \"01:30 PM\",\r\n                \"01:45 PM\",\r\n                \"02:00 PM\",\r\n                \"02:15 PM\",\r\n                \"02:30 PM\",\r\n                \"02:45 PM\",\r\n                \"03:00 PM\",\r\n                \"03:15 PM\",\r\n                \"03:30 PM\",\r\n                \"03:45 PM\",\r\n                \"04:00 PM\",\r\n                \"04:15 PM\",\r\n                \"04:30 PM\",\r\n                \"04:45 PM\",\r\n                \"05:00 PM\",\r\n                \"05:15 PM\",\r\n                \"05:30 PM\",\r\n                \"05:45 PM\",\r\n                \"06:00 PM\",\r\n                \"06:15 PM\",\r\n                \"06:30 PM\",\r\n                \"06:45 PM\",\r\n                \"07:00 PM\",\r\n                \"07:15 PM\",\r\n                \"07:30 PM\",\r\n                \"07:45 PM\",\r\n                \"08:00 PM\",\r\n                \"08:15 PM\",\r\n                \"08:30 PM\",\r\n                \"08:45 PM\",\r\n                \"09:00 PM\",\r\n                \"09:15 PM\",\r\n                \"09:30 PM\",\r\n            ];\r\n        } else if (min >= 45 && min <= 59) {\r\n            resultForArr = [\r\n                \"08:00 AM\",\r\n                \"08:15 AM\",\r\n                \"08:30 AM\",\r\n                \"08:45 AM\",\r\n                \"09:00 AM\",\r\n                \"09:15 AM\",\r\n                \"09:30 AM\",\r\n                \"09:45 AM\",\r\n                \"10:00 AM\",\r\n                \"10:15 AM\",\r\n                \"10:30 AM\",\r\n                \"10:45 AM\",\r\n                \"11:00 AM\",\r\n                \"11:15 AM\",\r\n                \"11:30 AM\",\r\n                \"11:45 AM\",\r\n                \"12:00 PM\",\r\n                \"12:15 PM\",\r\n                \"12:30 PM\",\r\n                \"12:45 PM\",\r\n                \"01:00 PM\",\r\n                \"01:15 PM\",\r\n                \"01:30 PM\",\r\n                \"01:45 PM\",\r\n                \"02:00 PM\",\r\n                \"02:15 PM\",\r\n                \"02:30 PM\",\r\n                \"02:45 PM\",\r\n                \"03:00 PM\",\r\n                \"03:15 PM\",\r\n                \"03:30 PM\",\r\n                \"03:45 PM\",\r\n                \"04:00 PM\",\r\n                \"04:15 PM\",\r\n                \"04:30 PM\",\r\n                \"04:45 PM\",\r\n                \"05:00 PM\",\r\n                \"05:15 PM\",\r\n                \"05:30 PM\",\r\n                \"05:45 PM\",\r\n                \"06:00 PM\",\r\n                \"06:15 PM\",\r\n                \"06:30 PM\",\r\n                \"06:45 PM\",\r\n                \"07:00 PM\",\r\n                \"07:15 PM\",\r\n                \"07:30 PM\",\r\n                \"07:45 PM\",\r\n                \"08:00 PM\",\r\n                \"08:15 PM\",\r\n                \"08:30 PM\",\r\n                \"08:45 PM\",\r\n                \"09:00 PM\",\r\n                \"09:15 PM\",\r\n                \"09:30 PM\",\r\n                \"09:45 PM\",\r\n            ];\r\n        }\r\n    } else if (hr >= 10 && hr <= 11 && ampm === \"PM\") {\r\n        resultForArr = [\r\n            \"08:00 AM\",\r\n            \"08:15 AM\",\r\n            \"08:30 AM\",\r\n            \"08:45 AM\",\r\n            \"09:00 AM\",\r\n            \"09:15 AM\",\r\n            \"09:30 AM\",\r\n            \"09:45 AM\",\r\n            \"10:00 AM\",\r\n            \"10:15 AM\",\r\n            \"10:30 AM\",\r\n            \"10:45 AM\",\r\n            \"11:00 AM\",\r\n            \"11:15 AM\",\r\n            \"11:30 AM\",\r\n            \"11:45 AM\",\r\n            \"12:00 PM\",\r\n            \"12:15 PM\",\r\n            \"12:30 PM\",\r\n            \"12:45 PM\",\r\n            \"01:00 PM\",\r\n            \"01:15 PM\",\r\n            \"01:30 PM\",\r\n            \"01:45 PM\",\r\n            \"02:00 PM\",\r\n            \"02:15 PM\",\r\n            \"02:30 PM\",\r\n            \"02:45 PM\",\r\n            \"03:00 PM\",\r\n            \"03:15 PM\",\r\n            \"03:30 PM\",\r\n            \"03:45 PM\",\r\n            \"04:00 PM\",\r\n            \"04:15 PM\",\r\n            \"04:30 PM\",\r\n            \"04:45 PM\",\r\n            \"05:00 PM\",\r\n            \"05:15 PM\",\r\n            \"05:30 PM\",\r\n            \"05:45 PM\",\r\n            \"06:00 PM\",\r\n            \"06:15 PM\",\r\n            \"06:30 PM\",\r\n            \"06:45 PM\",\r\n            \"07:00 PM\",\r\n            \"07:15 PM\",\r\n            \"07:30 PM\",\r\n            \"07:45 PM\",\r\n            \"08:00 PM\",\r\n            \"08:15 PM\",\r\n            \"08:30 PM\",\r\n            \"08:45 PM\",\r\n            \"09:00 PM\",\r\n            \"09:15 PM\",\r\n            \"09:30 PM\",\r\n            \"09:45 PM\",\r\n            \"10:00 PM\",\r\n        ];\r\n    }\r\n    return resultForArr;\r\n};\r\n\r\nconst getResultForClient = async (req, res) => {\r\n    try {\r\n        let now = Date.now();\r\n        let date = new Date(now + 5 * 3600 * 1000 + 1800 * 1000);\r\n        let localDate = formatAMPM(date);\r\n        let strDate = formatDate(date);\r\n        let x = getResultFor(Number(localDate.hr), Number(localDate.min), localDate.ampm);\r\n        let x1 = new Date(strDate);\r\n        let result = await getResultBYDateModel(x1, x);\r\n        return res.status(200).send({ status: true, message: \"Ok message\", data: result });\r\n    } catch (error) {\r\n        return res.status(500).send({ status: false, message: error.message });\r\n    }\r\n};\r\nconst getResultForAdmin = async (req, res) => {\r\n    try {\r\n        let now = Date.now();\r\n        // let date = new Date(now + 12 * 3600 * 1000 + 1800 * 1000 + 1200000);\r\n        let date = new Date(now + 5 * 3600 * 1000 + 1800 * 1000);\r\n        let localDate = formatAMPM(date);\r\n        let strDate = formatDate(date);\r\n        let x = getAdminResultFor(Number(localDate.hr), Number(localDate.min), localDate.ampm);\r\n        let x1 = new Date(strDate);\r\n        // console.log(date);\r\n        // console.log(x);\r\n        // console.log(x1);\r\n        \r\n        let result = await getResultBYDateModel(x1, x);\r\n        // console.log(result)\r\n        return res.status(200).send({ status: true, message: \"Ok message\", data: result });\r\n    } catch (error) {\r\n        return res.status(500).send({ status: false, message: error.message });\r\n    }\r\n};\r\nconst updateResultForAdmin = async (req, res) => {\r\n    try {\r\n        let { a, b, c, d, e } = req.body;\r\n        let resultId = req.params.resultid;\r\n        let resultObj = await getResultByIdFn(resultId);\r\n        if (!resultObj) {\r\n            return res.status(400).send({ status: false, message: \"Bad request\" });\r\n        }\r\n        if (a !== undefined && a !== \"\") {\r\n            if (resultObj.a === Number(a) || resultObj.b === Number(a) || resultObj.c === Number(a) || resultObj.d === Number(a) || resultObj.e === Number(a)) {\r\n                return res.status(400).send({ status: false, message: \"Please enter unique value which is not assigned to any name\" });\r\n            }\r\n            resultObj.a = a;\r\n        }\r\n        if (b !== undefined && b !== \"\") {\r\n            if (resultObj.a === Number(b) || resultObj.b === Number(b) || resultObj.c === Number(b) || resultObj.d === Number(b) || resultObj.e === Number(b)) {\r\n                return res.status(400).send({ status: false, message: \"Please enter unique value which is not assigned to any name\" });\r\n            }\r\n            resultObj.b = b;\r\n        }\r\n        if (c !== undefined && c !== \"\") {\r\n            if (resultObj.a === Number(c) || resultObj.b === Number(c) || resultObj.c === Number(c) || resultObj.d === Number(c) || resultObj.e === Number(c)) {\r\n                return res.status(400).send({ status: false, message: \"Please enter unique value which is not assigned to any name\" });\r\n            }\r\n            resultObj.c = c;\r\n        }\r\n        if (d !== undefined && d !== \"\") {\r\n            if (resultObj.a === Number(d) || resultObj.b === Number(d) || resultObj.c === Number(d) || resultObj.d === Number(d) || resultObj.e === Number(d)) {\r\n                return res.status(400).send({ status: false, message: \"Please enter unique value which is not assigned to any name\" });\r\n            }\r\n            resultObj.d = d;\r\n        }\r\n        if (e !== undefined && e !== \"\") {\r\n            if (resultObj.a === Number(e) || resultObj.b === Number(e) || resultObj.c === Number(e) || resultObj.d === Number(e) || resultObj.e === Number(e)) {\r\n                return res.status(400).send({ status: false, message: \"Please enter unique value which is not assigned to any name\" });\r\n            }\r\n            resultObj.e = e;\r\n        }\r\n        await resultObj.save();\r\n        return res.status(202).send({ status: true, message: \"Result Updated\" });\r\n    } catch (error) {\r\n        return res.status(500).send({ status: false, message: error.message });\r\n    }\r\n};\r\n\r\nconst getResultForSpecificDate = async (req, res) => {\r\n    try {\r\n        let date = new Date(req.params.date);\r\n        let now = Date.now();\r\n        let systemtime = new Date(now + 5 * 3600 * 1000 + 1800 * 1000);\r\n        const todayStr = formatDate(systemtime);\r\n        const todayDate = new Date(todayStr);\r\n        let result = [];\r\n        if (date.getTime() < todayDate.getTime()) {\r\n            result = await getResultBYSpecificBeforeToDay(date);\r\n        } else if (date.getTime() === todayDate.getTime()) {\r\n            let localDate = formatAMPM(systemtime);\r\n            let resultForArr = getResultForTheDay(Number(localDate.hr), Number(localDate.min), localDate.ampm);\r\n            result = await getResultBYSpecificToDay(date, resultForArr);\r\n        }\r\n        result.sort((a, b) => a.sno - b.sno);\r\n\r\n        // console.log(result);\r\n        return res.status(200).send({ status: true, message: \"Date fetched\", len: result.length, data: result });\r\n    } catch (error) {\r\n        return res.status(500).send({ status: false, message: error.message });\r\n    }\r\n};\r\n\r\nconst addAfield = async (req, res) => {\r\n    try {\r\n        let results = await getAllResult();\r\n        let count = 0;\r\n        for (let result of results) {\r\n            if (result.resultFor === \"08:00 AM\") {\r\n                result.sno = 1;\r\n            } else if (result.resultFor === \"08:15 AM\") {\r\n                result.sno = 2;\r\n            } else if (result.resultFor === \"08:30 AM\") {\r\n                result.sno = 3;\r\n            } else if (result.resultFor === \"08:45 AM\") {\r\n                result.sno = 4;\r\n            } else if (result.resultFor === \"09:00 AM\") {\r\n                result.sno = 5;\r\n            } else if (result.resultFor === \"09:15 AM\") {\r\n                result.sno = 6;\r\n            } else if (result.resultFor === \"09:30 AM\") {\r\n                result.sno = 7;\r\n            } else if (result.resultFor === \"09:45 AM\") {\r\n                result.sno = 8;\r\n            } else if (result.resultFor === \"10:00 AM\") {\r\n                result.sno = 9;\r\n            } else if (result.resultFor === \"10:15 AM\") {\r\n                result.sno = 10;\r\n            } else if (result.resultFor === \"10:30 AM\") {\r\n                result.sno = 11;\r\n            } else if (result.resultFor === \"10:45 AM\") {\r\n                result.sno = 12;\r\n            } else if (result.resultFor === \"11:00 AM\") {\r\n                result.sno = 13;\r\n            } else if (result.resultFor === \"11:15 AM\") {\r\n                result.sno = 14;\r\n            } else if (result.resultFor === \"11:30 AM\") {\r\n                result.sno = 15;\r\n            } else if (result.resultFor === \"11:45 AM\") {\r\n                result.sno = 16;\r\n            } else if (result.resultFor === \"12:00 PM\") {\r\n                result.sno = 17;\r\n            } else if (result.resultFor === \"12:15 PM\") {\r\n                result.sno = 18;\r\n            } else if (result.resultFor === \"12:30 PM\") {\r\n                result.sno = 19;\r\n            } else if (result.resultFor === \"12:45 PM\") {\r\n                result.sno = 20;\r\n            } else if (result.resultFor === \"01:00 PM\") {\r\n                result.sno = 21;\r\n            } else if (result.resultFor === \"01:15 PM\") {\r\n                result.sno = 22;\r\n            } else if (result.resultFor === \"01:30 PM\") {\r\n                result.sno = 23;\r\n            } else if (result.resultFor === \"01:45 PM\") {\r\n                result.sno = 24;\r\n            } else if (result.resultFor === \"02:00 PM\") {\r\n                result.sno = 25;\r\n            } else if (result.resultFor === \"02:15 PM\") {\r\n                result.sno = 26;\r\n            } else if (result.resultFor === \"02:30 PM\") {\r\n                result.sno = 27;\r\n            } else if (result.resultFor === \"02:45 PM\") {\r\n                result.sno = 28;\r\n            } else if (result.resultFor === \"03:00 PM\") {\r\n                result.sno = 29;\r\n            } else if (result.resultFor === \"03:15 PM\") {\r\n                result.sno = 30;\r\n            } else if (result.resultFor === \"03:30 PM\") {\r\n                result.sno = 31;\r\n            } else if (result.resultFor === \"03:45 PM\") {\r\n                result.sno = 32;\r\n            } else if (result.resultFor === \"04:00 PM\") {\r\n                result.sno = 33;\r\n            } else if (result.resultFor === \"04:15 PM\") {\r\n                result.sno = 34;\r\n            } else if (result.resultFor === \"04:30 PM\") {\r\n                result.sno = 35;\r\n            } else if (result.resultFor === \"04:45 PM\") {\r\n                result.sno = 36;\r\n            } else if (result.resultFor === \"05:00 PM\") {\r\n                result.sno = 37;\r\n            } else if (result.resultFor === \"05:15 PM\") {\r\n                result.sno = 38;\r\n            } else if (result.resultFor === \"05:30 PM\") {\r\n                result.sno = 39;\r\n            } else if (result.resultFor === \"05:45 PM\") {\r\n                result.sno = 40;\r\n            } else if (result.resultFor === \"06:00 PM\") {\r\n                result.sno = 41;\r\n            } else if (result.resultFor === \"06:15 PM\") {\r\n                result.sno = 42;\r\n            } else if (result.resultFor === \"06:30 PM\") {\r\n                result.sno = 43;\r\n            } else if (result.resultFor === \"06:45 PM\") {\r\n                result.sno = 44;\r\n            } else if (result.resultFor === \"07:00 PM\") {\r\n                result.sno = 45;\r\n            } else if (result.resultFor === \"07:15 PM\") {\r\n                result.sno = 46;\r\n            } else if (result.resultFor === \"07:30 PM\") {\r\n                result.sno = 47;\r\n            } else if (result.resultFor === \"07:45 PM\") {\r\n                result.sno = 48;\r\n            } else if (result.resultFor === \"08:00 PM\") {\r\n                result.sno = 49;\r\n            } else if (result.resultFor === \"08:15 PM\") {\r\n                result.sno = 50;\r\n            } else if (result.resultFor === \"08:30 PM\") {\r\n                result.sno = 51;\r\n            } else if (result.resultFor === \"08:45 PM\") {\r\n                result.sno = 52;\r\n            } else if (result.resultFor === \"09:00 PM\") {\r\n                result.sno = 53;\r\n            } else if (result.resultFor === \"09:15 PM\") {\r\n                result.sno = 54;\r\n            } else if (result.resultFor === \"09:30 PM\") {\r\n                result.sno = 55;\r\n            } else if (result.resultFor === \"09:45 PM\") {\r\n                result.sno = 56;\r\n            } else if (result.resultFor === \"10:00 PM\") {\r\n                result.sno = 57;\r\n            }\r\n            await result.save();\r\n            console.log(\"document updated, \", ++count);\r\n        }\r\n\r\n        return res.status(200).send({ status: true, message: \"Date fetched\", data: results });\r\n    } catch (error) {\r\n        return res.status(500).send({ status: false, message: error.message });\r\n    }\r\n};\r\n\r\nmodule.exports = { generateMultipleResult, getResultForClient, getResultForAdmin, getResultForSpecificDate, updateResultForAdmin };\r\n","const jwt = require(\"jsonwebtoken\");\r\n\r\n// AUTHENTICATION\r\nconst Authentication = async (req, res, next) => {\r\n  try {\r\n    let tokenWithBearer = req.headers.authorization;\r\n    \r\n\r\n    if (!tokenWithBearer) {\r\n      return res\r\n        .status(400)\r\n        .send({ status: false, message: \"token is required\" });\r\n    }\r\n\r\n    let tokenArray = tokenWithBearer.split(\" \");\r\n\r\n    let token = tokenArray[1];\r\n    if (!token) {\r\n      return res.status(401).send({ status: false, message: \"Invalid token\" });\r\n    }\r\n\r\n    jwt.verify(token, process.env.TOKEN_SECRET_KEY, function (err, decode) {\r\n      if (err) {\r\n        return res.status(400).send({ status: false, message: err.message });\r\n      } else {\r\n        req.userId = decode.userId;\r\n        next();\r\n      }\r\n    });\r\n  } catch (error) {\r\n    return res.status(500).send({ status: false, message: error.message });\r\n  }\r\n};\r\n\r\n\r\nmodule.exports = { Authentication }","const mongoose = require('mongoose');\r\nconst ObjectId = mongoose.Schema.Types.ObjectId;\r\n\r\nconst adminSchema = new mongoose.Schema({\r\n    name: {\r\n        type: String,\r\n        required: true,\r\n    },\r\n    userid: {\r\n        type: String,\r\n        required: true,\r\n    },\r\n    password: {\r\n        type: String,\r\n        required: true,\r\n    },\r\n},\r\n    { timestamps: true });\r\nconst AdminModel = mongoose.model('Admin', adminSchema);\r\n// User Actions\r\nconst getAdminsFn = () => AdminModel.find();\r\nconst getAdminByUserIdFn = (userid) => AdminModel.findOne({ userid });\r\nconst createAdminFn = (data) => new AdminModel(data).save().then((admin) => admin.toObject());\r\nconst deleteAdminByUserIdFn = (userid) => AdminModel.findOneAndDelete({ userid });\r\n\r\nmodule.exports = {getAdminsFn, getAdminByUserIdFn, createAdminFn, deleteAdminByUserIdFn};\r\n\r\n\r\n","const mongoose = require(\"mongoose\");\r\nconst resultSchema = new mongoose.Schema(\r\n    {\r\n        a: {\r\n            type: Number,\r\n        },\r\n        b: {\r\n            type: Number,\r\n        },\r\n        c: {\r\n            type: Number,\r\n        },\r\n        d: {\r\n            type: Number,\r\n        },\r\n        e: {\r\n            type: Number,\r\n        },\r\n        sno:{\r\n            type: Number,\r\n        },\r\n        resultFor: {\r\n            type: String,\r\n        },\r\n        nextDraw: {\r\n            type: String,\r\n        },\r\n        created_At: { type: Date },\r\n    },\r\n    { timestamps: true }\r\n);\r\n\r\nconst ResultModel = mongoose.model(\"Results\", resultSchema);\r\n\r\nconst getAllResult = () => ResultModel.find();\r\n\r\nconst getResultByIdFn = (id) => ResultModel.findById(id);\r\nconst generateResult = (data) => new ResultModel(data).save().then((result) => result.toObject());\r\nconst getResultBYDateModel = (date, resultFor) => ResultModel.findOne({ created_At: date, resultFor: resultFor });\r\nconst getResultBYSpecificBeforeToDay = (date) => ResultModel.find({ created_At: date });\r\nconst getResultBYSpecificToDay = (date, resultForArr) => ResultModel.find({created_At:date, resultFor: { $in: resultForArr } });\r\n\r\nmodule.exports = {getAllResult, generateResult, getResultBYDateModel ,getResultBYSpecificBeforeToDay, getResultBYSpecificToDay, getResultByIdFn};\r\n","module.exports = require(\"bcrypt\");","module.exports = require(\"body-parser\");","module.exports = require(\"cors\");","module.exports = require(\"dotenv\");","module.exports = require(\"express\");","module.exports = require(\"jsonwebtoken\");","module.exports = require(\"mongoose\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","const express = require(\"express\");\r\nconst app = express();\r\nconst bodyParser = require('body-parser');\r\nconst cors = require('cors');\r\nconst mongoose = require('mongoose');\r\nrequire('dotenv').config();\r\n\r\napp.use(express.json());\r\napp.use(express.urlencoded({ extended: true }));\r\napp.use(bodyParser.json());\r\napp.use(cors());\r\n\r\nmongoose\r\n    .connect(\r\n        process.env.MONGO_DB_URL,\r\n        { useNewUrlParser: true }\r\n    )\r\n    .then(() => console.log(\"Connected with Database\"))\r\n    .catch((err) => console.log(err));\r\n\r\napp.use(\"/\", require('./src/Routes/resultRoute'));\r\napp.use(\"/\", require('./src/Routes/adminRoutes'));\r\napp.set(\"port\", 9999);\r\n\r\napp.listen(app.get(\"port\"), () => {\r\n    console.log(\"Express server listening on port \" + app.get(\"port\"));\r\n});"],"names":["express","Authentication","adminLogin","createAdmin","router","Router","post","module","exports","generateMultipleResult","getResultForClient","getResultForAdmin","getResultForSpecificDate","updateResultForAdmin","get","req","res","status","send","message","createAdminFn","getAdminByUserIdFn","jwt","bcrypt","async","userid","password","body","admin","compare","err","result","date","Date","now","data","issueTime","Math","floor","token","sign","userId","iat","process","env","TOKEN_SECRET_KEY","expiresIn","name","setHeader","hasAccess","error","secretKey","params","CREATEADMIN_SECRET_KEY","hash","undefined","generateResult","getResultBYSpecificBeforeToDay","getResultBYSpecificToDay","getResultBYDateModel","getResultByIdFn","getAllResult","randomGenerate","a","random","b","c","d","e","getUnique5Number","set","Set","size","randomG","formatAMPM","hours","getHours","minutes","getMinutes","ampm","strTime","hr","min","formatDate","year","getFullYear","month","getMonth","nowDate","getDate","arr2","dateNow","getTime","hr24","i","add24Hr","date1","date2","j","length","resultFor","nextDraw","created_At","console","log","localDate","strDate","x","getResultFor","Number","x1","getAdminResultFor","systemtime","todayStr","todayDate","resultForArr","getResultForTheDay","sort","sno","len","resultId","resultid","resultObj","save","next","tokenWithBearer","headers","authorization","split","verify","decode","mongoose","adminSchema","Schema","Types","ObjectId","type","String","required","timestamps","AdminModel","model","getAdminsFn","find","findOne","then","toObject","deleteAdminByUserIdFn","findOneAndDelete","resultSchema","ResultModel","$in","id","findById","require","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","app","bodyParser","cors","use","json","urlencoded","extended","connect","MONGO_DB_URL","useNewUrlParser","catch","listen"],"sourceRoot":""}